<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary> Предоставляет методы расширения для класса <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetSelectExpandClause(System.Net.Http.HttpRequestMessage)">
      <summary> Получает проанализированный <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> заданного запроса. </summary>
      <returns>Проанализированный <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> заданного запроса.</returns>
      <param name="request">Запрос.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})"></member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetSelectExpandClause(System.Net.Http.HttpRequestMessage,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause)">
      <summary> Задает проанализированный <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> для <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />, чтобы использовать во время записи ответа на данный запрос. </summary>
      <param name="request">Запрос.</param>
      <param name="selectExpandClause">Проанализированный <see cref="T:Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause" /> заданного запроса.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Позволяет запросу поддерживать действия с возвращаемым типом <see cref="T:System.Linq.IQueryable" /> или <see cref="T:System.Linq.IQueryable`1" />.            </summary>
      <param name="configuration">Конфигурация сервера.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Позволяет запросу поддерживать действия с возвращаемым типом <see cref="T:System.Linq.IQueryable" /> или <see cref="T:System.Linq.IQueryable`1" />.</summary>
      <param name="configuration">Конфигурация сервера.</param>
      <param name="queryFilter">Фильтр действий, который выполняет запрос.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Преобразует <paramref name="httpError" /> в <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Преобразованный <see cref="T:Microsoft.Data.OData.ODataError" /></returns>
      <param name="httpError">Экземпляр <see cref="T:System.Web.Http.HttpError" /> для преобразования.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Сопоставляет указанный маршрут OData.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Сопоставляет указанный маршрут OData.Когда предоставляется batchHandler, он создает конечную точку «batch» для обработки пакетных запросов.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
      <param name="batchHandler">
        <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Сопоставляет указанный маршрут OData.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для синтаксического анализа путей OData.</param>
      <param name="routingConventions">Соглашения о маршрутизации OData для выбора контроллера и действия.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention},System.Web.Http.OData.Batch.ODataBatchHandler)">
      <summary>Сопоставляет указанный маршрут OData.Когда предоставляется batchHandler, он создает конечную точку «batch» для обработки пакетных запросов.</summary>
      <param name="routes">Коллекция маршрутов для приложения.</param>
      <param name="routeName">Имя сопоставляемого маршрута.</param>
      <param name="routePrefix">Префикс, который необходим для добавления в шаблон пути маршрута OData.</param>
      <param name="model">Модель EDM для синтаксического анализа путей OData.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> для синтаксического анализа путей OData.</param>
      <param name="routingConventions">Соглашения о маршрутизации OData для выбора контроллера и действия.</param>
      <param name="batchHandler">
        <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />.</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Добавляет элементы указанной коллекции в конец <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
      <param name="collection">Коллекция, в которую необходимо добавить элементы.</param>
      <param name="items">Элементы, которые необходимо добавить в конец <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.Коллекция элементов не может быть со значением null, но она может содержать элементы со значением null.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Вставляет элементы коллекции в <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> по указанному индексу.</summary>
      <param name="collection">Коллекция, в которую необходимо вставить элементы.</param>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить новые элементы.</param>
      <param name="items">Элементы, которые необходимо добавить в <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.Коллекция элементов не может быть со значением null, но она может содержать элементы со значением null.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Предоставляет методы расширения для класса <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Генерирует ссылку OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Создает ссылку OData, используя имя маршрута и обработчик пути запроса OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="routeName">Имя маршрута OData.</param>
      <param name="pathHandler">Обработчик пути для использования при генерации ссылки.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Генерирует ссылку OData.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Вспомогательный метод URL-адреса.</param>
      <param name="segments">Сегменты пути OData.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>Этот класс определяет атрибут, который можно применить к действию, чтобы включить использование в запросах синтаксис запросов OData.Чтобы избежать обработки неожиданных или вредоносных запросов, используйте параметры проверки в <see cref="T:System.Web.Http.QueryableAttribute" />, чтобы проверять входящие запросы.Дополнительные сведения см. по адресу: http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor"></member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators"></member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions"></member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators"></member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties"></member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions"></member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)"></member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Object,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary> Применяет запрос к данной сущности на основе входящего запроса из универсального кода ресурса (URI) и настроек запроса. </summary>
      <returns>Новая сущность после применения запроса $select и $expand.</returns>
      <param name="entity">Стандартная сущность из сообщения ответа.</param>
      <param name="queryOptions">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> создан на основе входящего запроса.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization"></member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering"></member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation"></member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth"></member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxExpansionDepth">
      <summary> Получает или задает максимальную глубину расширения для параметра запроса $expand. </summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount"></member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip"></member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop"></member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)"></member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize"></member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)"></member>
    <member name="T:System.Web.Http.SingleResult">
      <summary> Represents an <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult" /> class. </summary>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary> Creates a &lt;see cref="T:System.Web.Http.SingleResult`1" /&gt; from an &lt;see cref="T:System.Linq.IQueryable`1" /&gt;. </summary>
      <returns>The created &lt;see cref="T:System.Web.Http.SingleResult`1" /&gt;.</returns>
      <param name="queryable">The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities.</param>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary> The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary> Represents an <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. </summary>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult" /> class. </summary>
      <param name="queryable">The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary> The &lt;see cref="T:System.Linq.IQueryable`1" /&gt; containing zero or one entities. </summary>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Предоставляет удобную начальную точку для контроллера, который предоставляет набор сущностей OData.Это асинхронная версия <see cref="T:System.Web.Http.OData.EntitySetController`2" />.</summary>
      <typeparam name="TEntity">Тип, связанный с предоставленным типом сущности набора сущностей.</typeparam>
      <typeparam name="TKey">Тип, связанный с ключом сущности предоставленного типа сущности набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>Чтобы создать новую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит созданный экземпляр после завершения.</returns>
      <param name="entity">Сущность, которую необходимо добавить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Чтобы обработать запросы POST и PUT, которые предпринимают попытку создать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая завершается после успешного создания ссылки.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, на которую необходимо создать ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>Чтобы обработать запросы DELETE для удаления существующих сущностей из набора сущностей, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая завершается после успешного удаления ссылки.</returns>
      <param name="key">Ключ сущности, которую необходимо удалить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="relatedKey">Ключ связанной записи.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, которую необходимо удалить из свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>Чтобы обработать запросы GET, которые предпринимают попытку получить сущности из набора сущностей, следует переопределить этот метод.          </summary>
      <returns>Соответствующие сущности из набора сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Обрабатывает запросы GET, которые предпринимают попытку получить отдельную сущность с помощью ключа из набора сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>Чтобы получить сущность с помощью ключа из набора сущностей, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая после завершения содержит полученную сущность или значение null, если в наборе сущностей не была найдена сущность с указанным ключом.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>Чтобы получить ключ указанной сущности, следует переопределить этот метод.</summary>
      <returns>Значение ключа сущности</returns>
      <param name="entity">Сущность.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Чтобы обработать все несопоставленные запросы OData, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит сообщение ответа для отправки в клиент после завершения.</returns>
      <param name="odataPath">Путь OData запроса.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Получает путь OData текущего запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Обрабатывает запросы PATCH и MERGE, чтобы частично обновить одну сущность в наборе сущностей.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит сообщение ответа для отправки в клиент после завершения.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Чтобы применить частичное обновление к существующей сущности в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит обновленный экземпляр после завершения.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Обрабатывает запросы POST, которые создают новые сущности в наборе сущностей.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит сообщение ответа для отправки в клиент после завершения.</returns>
      <param name="entity">Сущность, которую необходимо вставить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>Обрабатывает запросы PUT, которые пытаются заменить одну сущность в наборе сущностей.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит сообщение ответа для отправки в клиент после завершения.</returns>
      <param name="key">Ключ сущности, которую необходимо заменить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Получает параметры запроса OData текущего запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>Чтобы обновить существующую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />, которая содержит обновленный экземпляр после завершения.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Представляет сопоставление <see cref="T:Microsoft.Data.Edm.IEdmType" /> с типом CLR.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" />.</summary>
      <param name="clrType">Резервный тип CLR для типа EDM.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>Резервный тип CLR для типа EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta">
      <summary>A class the tracks changes (i.e. the Delta) for an entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.#ctor"></member>
    <member name="M:System.Web.Http.OData.Delta.Clear">
      <summary>Clears the Delta and resets the underlying Entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetChangedPropertyNames">
      <summary>Returns the Properties that have been modified through this Delta as an enumeration of Property Names</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.GetUnchangedPropertyNames">
      <summary>Returns the Properties that have not been modified through this Delta as an enumeration of Property Names</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Overrides the DynamicObject TryGetMember method, so that only the properties of Entity can be got.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Attempts to get the <see cref="T:System.Type" /> of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>Returns true if the Property was found and false if not.</returns>
      <param name="name">The name of the Property</param>
      <param name="type">The type of the Property</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Attempts to get the value of the Property called <paramref name="name" /> from the underlying Entity.</summary>
      <returns>True if the Property was found</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The value of the Property</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Overrides the DynamicObject TrySetMember method, so that only the properties of Entity can be set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Attempts to set the Property called <paramref name="name" /> to the <paramref name="value" /> specified.</summary>
      <returns>True if successful</returns>
      <param name="name">The name of the Property</param>
      <param name="value">The new value of the Property</param>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>Класс, отслеживающий изменения (например,Delta) для определенного <paramref name="TEntityType" />.</summary>
      <typeparam name="TEntityType">Тип сущности TEntityType – базовый тип сущности, для которой класс Delta отслеживает изменения.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Производный тип сущности, для которого будут отслеживаться изменения.<paramref name="entityType" /> должен присваиваться экземплярам <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Очищает Delta и сбрасывает базовую сущность.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Копирует измененные значения свойства из базовой сущности (доступной через <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> для <paramref name="original" /> сущности.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Копирует неизмененные значения свойства из базовой сущности (доступной через <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> для сущности <paramref name="original" />.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>Получает фактический тип сущности, для которой отслеживаются изменения.</summary>
      <returns>Фактический тип сущности, для которой отслеживаются изменения.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.ExpectedClrType"></member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Возвращает свойства, которые были изменены с помощью этого класса Delta, как перечисление имен свойств.</summary>
      <returns>Имена свойств.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Возвращает <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> экземпляр, в котором содержатся все изменения (и исходные значения), отслеживаемый с помощью этого класса Delta.</summary>
      <returns>Экземпляр <see cref="P:System.Web.Http.OData.Delta`1.EntityType" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>  Возвращает свойства, которые не были изменены с помощью этого класса Delta, как перечисление имен свойств.</summary>
      <returns>Свойства, которые не были изменены с помощью этого класса Delta, представленные как перечисление имен свойств.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Перезаписывает исходную сущность <paramref name="original" /> с изменениями, которые были отслежены с помощью этого класса Delta. </summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Перезаписывает исходную сущность <paramref name="original" /> с значениями, которые были сохранены в этом классе Delta.</summary>
      <param name="original">Сущность, которую необходимо обновить.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Предпринимает попытку получить <see cref="T:System.Type" /> свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Значение true, если свойство найдено. В противном случае — значение false.</returns>
      <param name="name">Имя свойства.</param>
      <param name="type">Тип свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Предпринимает попытку получить значение свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Значение true, если свойство найдено.</returns>
      <param name="name">Имя свойства.</param>
      <param name="value">Значение свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>  Предпринимает попытку присвоить свойству, названному <paramref name="name" />, указанное значение <paramref name="value" />.</summary>
      <returns>Значение true если операция выполнена успешно, в противном случае — false.</returns>
      <param name="name">Имя свойства.</param>
      <param name="value">Новое значение свойства.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
      <param name="isNullable">true if the object is nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmComplexObjectCollection">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmObject" /> that is a collection of <see cref="T:System.Web.Http.OData.IEdmComplexObject" />s.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmComplexObject})">
      <summary>Initialzes a new instance of the <see cref="T:System.Web.Http.OData.EdmComplexObjectCollection" /> class.</summary>
      <param name="edmType">The edm type of the collection.</param>
      <param name="list">The list that is wrapped by the new collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmComplexObjectCollection.GetEdmType"></member>
    <member name="T:System.Web.Http.OData.EdmEntityObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmEntityObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObject.#ctor(Microsoft.Data.Edm.IEdmEntityTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmEntityTypeReference" /> of this object.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmEntityObjectCollection">
      <summary>Represents the collection of EDM entity object type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The reference type of EDM.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.#ctor(Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{System.Web.Http.OData.IEdmEntityObject})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmEntityObjectCollection" /> class.</summary>
      <param name="edmType">The reference type of EDM.</param>
      <param name="list">The list.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmEntityObjectCollection.GetEdmType">
      <summary>Gets a reference to an EDM type.</summary>
      <returns>A reference to an EDM type.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EdmModelExtensions">
      <summary>Provides extension methods for the <see cref="T:Microsoft.Data.Edm.IEdmModel" /> interface.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to be used while generating action links for the given action.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> for the given action if one is set; otherwise, a new <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> that generates action links following OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the action.</param>
      <param name="action">The action for which the link builder is needed.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.GetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Gets the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given entity set.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> if set for the given the entity set; otherwise, a new <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> that generates URLs that follow OData URL conventions.</returns>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="entitySet">The entity set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetActionLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.Builder.ActionLinkBuilder)">
      <summary>Sets the <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to be used for generating the OData action link for the given action.</summary>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="action">The action for which the action link is to be generated.</param>
      <param name="actionLinkBuilder">The <see cref="T:System.Web.Http.OData.Builder.ActionLinkBuilder" /> to set.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmModelExtensions.SetEntitySetLinkBuilder(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmEntitySet,System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation)">
      <summary>Sets the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to be used while generating self and navigation links for the given entity set.</summary>
      <param name="model">The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> containing the entity set.</param>
      <param name="entitySet">The entity set.</param>
      <param name="entitySetLinkBuilder">The <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> to set.</param>
    </member>
    <member name="T:System.Web.Http.OData.EdmStructuredObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmStructuredObject" /> with no backing CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredType,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> of this object.</param>
      <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.#ctor(Microsoft.Data.Edm.IEdmStructuredTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.EdmStructuredObject" /> class.</summary>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmStructuredTypeReference" /> of this object.</param>
    </member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ActualEdmType">
      <summary>Gets or sets the actual <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.Clear"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.ExpectedEdmType">
      <summary>Gets or sets the expected <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> of the entity or complex type of this object.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetChangedPropertyNames"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.GetUnchangedPropertyNames"></member>
    <member name="P:System.Web.Http.OData.EdmStructuredObject.IsNullable">
      <summary>Gets or sets whether the EDM object is nullable or not.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="M:System.Web.Http.OData.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)"></member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>Экземпляр <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> переходит по ссылке на себя (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) и к построителям ссылок навигации (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />), и может использоваться ими для генерации ссылок.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.EntityInstanceContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.EntityInstanceContext" />.</summary>
      <param name="serializerContext">Контекст сериализатора.</param>
      <param name="entityType">Тип сущности.</param>
      <param name="entityInstance">Экземпляр сущности.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Получает или задает <see cref="T:Microsoft.Data.Edm.IEdmModel" />, которому принадлежит данный экземпляр.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" />, которому принадлежит этот экземпляр.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmObject">
      <summary>Получает или задает объект сущности для этого экземпляра.</summary>
      <returns>Объект сущности для этого экземпляра.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Получает или задает значение для экземпляра этой сущности.</summary>
      <returns>Значение этого экземпляра сущности.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Получает или задает <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит данный экземпляр.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит этот экземпляр.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Получает или задает <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> экземпляра этой сущности.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> этого экземпляра сущности.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <summary>Получает или задает HTTP-запрос, который вызвал создание данного экземпляра.</summary>
      <returns>HTTP-запрос, который вызвал создание данного экземпляра.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SerializerContext">
      <summary>Получает или задает контекст сериализатора.</summary>
      <returns>Контекст сериализатора.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Получает или задает значение, указывающее необходимость выполнения проверок ActionAvailabilityCheck.</summary>
      <returns>Значение true, если следует выполнить проверку ActionAvailabilityChecks. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <summary>Получает или задает <see cref="T:System.Web.Http.Routing.UrlHelper" />, с помощью которого можно создать ссылки во время сериализации экземпляра этой сущности.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" />, с помощью которого можно создать ссылки во время сериализации этого экземпляра сущности.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Представляет экземпляр <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" />, который переходит по ссылке на себя (<see cref="M:EntitySetConfiguration.HasIdLink" />, <see cref="M:EntitySetConfiguration.HasEditLink" />, <see cref="M:EntitySetConfiguration.HasReadLink" />) и к конструкторам ссылок навигации (<see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" />, <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" />), а также может использоваться ими для формирования ссылок.</summary>
      <typeparam name="TEntityType">Тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance">
      <summary>Получает или задает экземпляр сущности.</summary>
      <returns>Экземпляр сущности.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Предоставляет удобную начальную точку для контроллера, который предоставляет набор сущностей OData.Это синхронная версия <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">Тип, связанный с предоставленным типом сущности набора сущностей.</typeparam>
      <typeparam name="TKey">Тип, связанный с ключом сущности предоставленного типа сущности набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.EntitySetController`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>Чтобы создать новую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Созданная сущность.</returns>
      <param name="entity">Сущность, которую необходимо добавить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Чтобы обработать запросы POST и PUT, которые предпринимают попытку создать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, на которую необходимо создать ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>Чтобы обработать запросы DELETE для удаления существующих сущностей из набора сущностей, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности, которую необходимо удалить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="relatedKey">Ключ связанной записи.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>Чтобы обработать запросы DELETE, которые предпринимают попытку разорвать связь между двумя сущностями, следует переопределить этот метод.</summary>
      <param name="key">Ключ сущности со свойством навигации.</param>
      <param name="navigationProperty">Имя свойства навигации.</param>
      <param name="link">Идентификатор URI сущности, которую необходимо удалить из свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>Чтобы обработать запросы GET, которые предпринимают попытку получить сущности из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Соответствующие сущности из набора сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Обрабатывает запросы GET, которые предпринимают попытку получить отдельную сущность с помощью ключа из набора сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>Чтобы получить сущность с помощью ключа из набора сущностей, следует переопределить этот метод.</summary>
      <returns>Полученная сущность или значение null, если в наборе сущностей не была найдена сущность с указанным ключом.</returns>
      <param name="key">Ключ сущности, которую необходимо получить.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>Чтобы получить ключ указанной сущности, следует переопределить этот метод.</summary>
      <returns>Значение ключа сущности.</returns>
      <param name="entity">Сущность.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Чтобы обработать все несопоставленные запросы OData, следует переопределить этот метод.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="odataPath">Путь OData запроса.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Получает путь OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Обрабатывает запросы PATCH и MERGE, чтобы частично обновить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Чтобы применить частичное обновление к существующей сущности в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Обновленная сущность.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="patch">Исправление, представляющее частичное обновление.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Обрабатывает запросы POST, которые создают новые сущности в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="entity">Сущность, которую необходимо вставить в набор сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Обрабатывает запросы PUT, которые пытаются заменить одну сущность в наборе сущностей.</summary>
      <returns>Сообщение ответа, которое необходимо отправить обратно клиенту.</returns>
      <param name="key">Ключ сущности, которую необходимо заменить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>Получает параметры запроса OData текущего запроса.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>Чтобы обновить существующую сущность в наборе сущностей, следует переопределить этот метод.</summary>
      <returns>Обновленная сущность.</returns>
      <param name="key">Ключ сущности, которую необходимо обновить.</param>
      <param name="update">Обновленная сущность.</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Содержит контекстную информацию о веб-канале, который в настоящее время сериализируется.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.FeedContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит этот экземпляр.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, которому принадлежит этот экземпляр.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Получает значение экземпляра этого веб-канала.</summary>
      <returns>Значение экземпляра этого веб-канала.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request">
      <summary>Получает или задает HTTP-запрос, который вызвал создание данного экземпляра.</summary>
      <returns>HTTP-запрос, который вызвал создание данного экземпляра.</returns>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.RequestContext"></member>
    <member name="P:System.Web.Http.OData.FeedContext.Url">
      <summary>Получает или задает <see cref="T:System.Web.Http.Routing.UrlHelper" />, который необходимо использовать для создания ссылок во время сериализации экземпляра этого канала.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" />, который необходимо использовать для генерации ссылок во время сериализации экземпляра этого канала.</returns>
    </member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>Реализация <see cref="T:System.Web.Http.ParameterBindingAttribute" />, который может привязать параметры идентификатора URI, используя соглашения OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.FromODataUriAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Получает привязку для параметра.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />, содержащий привязку.</returns>
      <param name="parameter">Связываемый параметр.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>Разрешает и отслеживает изменения в объекте.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Очищает <see cref="T:System.Web.Http.OData.IDelta" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Возвращает свойства, которые были изменены с помощью этого класса IDelta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Возвращает свойства, которые не были изменены с помощью этого класса IDelta, как перечисление имен свойств.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Предпринимает попытку получить <see cref="T:System.Type" /> свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Возвращает значение true, если свойство было найдено, и значение false, если нет.</returns>
      <param name="name">Имя свойства.</param>
      <param name="type">Тип свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Предпринимает попытку получить значение свойства, названного <paramref name="name" />, из базовой сущности.</summary>
      <returns>Возвращает значение true, если свойство было найдено, и значение false, если нет.</returns>
      <param name="name">Имя свойства</param>
      <param name="value">Значение свойства</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Предпринимает попытку присвоить свойству, названному <paramref name="name" />, указанное значение <paramref name="value" />.</summary>
      <returns>Возвращает значение true, если операция выполнена успешно и значение false, если нет.</returns>
      <param name="name">Имя свойства.</param>
      <param name="value">Новое значение свойства.</param>
    </member>
    <member name="T:System.Web.Http.OData.IEdmComplexObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmEntityObject">
      <summary>Represents an instance of an <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.IEdmObject">
      <summary>Представляет экземпляр EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmObject.GetEdmType">
      <summary>Возвращает тип EDM текущего экземпляра.</summary>
      <returns>Тип EDM текущего экземпляра.</returns>
    </member>
    <member name="T:System.Web.Http.OData.IEdmStructuredObject">
      <summary>Представляет структурированный компонент объекта Edm.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="T:System.Web.Http.OData.NullEdmComplexObject">
      <summary>Represents an <see cref="T:System.Web.Http.OData.IEdmComplexObject" /> that is null.</summary>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.#ctor(Microsoft.Data.Edm.IEdmComplexTypeReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.NullEdmComplexObject" /> class.</summary>
      <param name="edmType">The EDM type of this object.</param>
    </member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.GetEdmType"></member>
    <member name="M:System.Web.Http.OData.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)"></member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>Класс ActionPayload содержит имена и значения параметра, предоставленного клиентом в запросе POST, чтобы вызвать определенное действие.Значения параметра сохраняются в словаре, который индексируется с помощью имени параметра.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.ODataActionParameters" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Определяет базовый класс контроллеров OData, которые поддерживают запись и чтение данных, используя форматы OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataController.Created``1(``0)">
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.Updated``1(``0)">
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>Атрибут необходимо разместить в контроллерах, которые включают модули форматирования OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.ODataFormattingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.CreateODataFormatters">
      <summary>Создает список модулей форматирования OData.</summary>
      <returns>Список модулей форматирования OData.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Обратный вызов, задающий переопределения для конкретного контроллера в этом controllerDescriptor.</summary>
      <param name="controllerSettings">Параметры контроллера для инициализации.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.Обратите внимание, что <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> может быть связан с контроллером производного типа, учитывая, что <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> наследуется.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Представляет <see cref="T:System.Web.Http.ApiController" /> для формирования сервисного документа и документа метаданных ($metadata) OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Создает документ $metadata OData.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.IEdmModel" /> для представления $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Создает сервисный документ OData.</summary>
      <returns>Сервисный документ для службы.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataNullValueAttribute">
      <summary>Represents an attributes of the OData null value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.ODataNullValueAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataNullValueAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Called after the action method is invoked.</summary>
      <param name="actionExecutedContext">The action executed context.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>Определяет некоторую контекстную информацию, используемую для выполнения построения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,Microsoft.Data.Edm.IEdmType)"></member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>Составляет экземпляр <see cref="T:System.Web.Http.OData.ODataQueryContext" /> вместе с <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и типом CLR элемента.</summary>
      <param name="model">Модель EdmModel, которая включает <see cref="T:Microsoft.Data.Edm.IEdmType" />, соответствующий данному <paramref name="elementClrType" />.</param>
      <param name="elementClrType">Тип CLR элемента запрашиваемой коллекции.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Получает тип CLR элемента.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>Получает тип <see cref="T:Microsoft.Data.Edm.IEdmType" /> элемента.</summary>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Получает данный <see cref="T:Microsoft.Data.Edm.IEdmModel" />, который содержит набор сущностей EntitySet.</summary>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>
        <see cref="T:System.Web.Http.ParameterBindingAttribute" /> для привязки параметров типа <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> к запросу OData из входящего запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Определяет атрибут уровня контроллера, который можно использовать, чтобы включить выбор действия OData, на основе соглашений маршрутизации.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.ODataRoutingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Обратный вызов, задающий переопределения для конкретного контроллера в этом controllerDescriptor.</summary>
      <param name="controllerSettings">Параметры контроллера для инициализации.</param>
      <param name="controllerDescriptor">Дескриптор контроллера.Обратите внимание, что <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> может быть связан с контроллером производного типа, учитывая, что <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> наследуется.</param>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Представляет канал сущностей, которые содержат дополнительные сведения, поддерживаемые форматами OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.PageResult" />.</summary>
      <param name="nextPageLink">Ссылка на следующую страницу элементов в канале.</param>
      <param name="count">Общее количество элементов в канале.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Получает общее количество элементов в канале.</summary>
      <returns>Возвращает значение <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Получает ссылку на следующую страницу элементов в канале.</summary>
      <returns>Возвращает значение <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>Представляет канал сущностей, которые содержат дополнительные сведения, поддерживаемые форматами OData.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Создает частичный набор результатов, используемый в случае включенного разбиения на страницы на сервере.</summary>
      <param name="items">Подмножество соответствующих результатов, которые следует сериализировать на этой странице.</param>
      <param name="nextPageLink">Ссылка на следующую страницу соответствующих результатов (если их больше).</param>
      <param name="count">Общее число соответствующих результатов, чтобы клиенты могли узнать количество совпадений на сервере.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации в коллекции.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <summary>Получает коллекцию сущностей для данного канала.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации в коллекции.</returns>
    </member>
    <member name="T:System.Web.Http.OData.TypedDelta">
      <summary>Represents a <see cref="T:System.Web.Http.OData.Delta" /> that can be used when a backing CLR type exists for the entity type whose changes are tracked.</summary>
    </member>
    <member name="M:System.Web.Http.OData.TypedDelta.#ctor"></member>
    <member name="P:System.Web.Http.OData.TypedDelta.EntityType">
      <summary>Gets the actual type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="P:System.Web.Http.OData.TypedDelta.ExpectedClrType">
      <summary>Gets the expected type of the entity for which the changes are tracked.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetRequestItem">
      <summary>Представляет запрос ChangeSet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.ChangeSetRequestItem" />.</summary>
      <param name="requests">Сообщения ответа в ChangeSet.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Web.Http.OData.Batch.ChangeSetRequestItem" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.GetResourcesForDisposal">
      <summary>Получает ресурсы, зарегистрированные для освобождения во всех сообщениях запроса ChangeSet.</summary>
      <returns>Коллекция ресурсов, зарегистрированных для освобождения.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetRequestItem.Requests">
      <summary>Получает сообщения ответа в ChangeSet.</summary>
      <returns>Сообщения ответа в ChangeSet.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Асинхронно отправляет запрос ChangeSet.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" />.</returns>
      <param name="invoker">Вызов действия.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ChangeSetResponseItem">
      <summary> Represents a ChangeSet response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.HttpResponseMessage})">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" /> class. </summary>
      <param name="responses">The response messages for the ChangeSet requests.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.ChangeSetResponseItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ChangeSetResponseItem.Responses">
      <summary> Gets the response messages for the ChangeSet. </summary>
      <returns>The response messages for the ChangeSet.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ChangeSetResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter)">
      <summary> Writes the responses as a ChangeSet. </summary>
      <returns>The task that performs the asynchronous operation.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler">
      <summary>Предоставляет используемую по умолчанию реализацию <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> для обработки пакетного запроса OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.DefaultODataBatchHandler" />. </summary>
      <param name="httpServer">
        <see cref="T:System.Web.Http.HttpServer" /> для обработки отдельных пакетных запросов.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchRequestItem},System.Threading.CancellationToken)">
      <summary>Асинхронно выполняет пакетные запросы OData. </summary>
      <returns>Коллекция <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> для пакетных запросов.</returns>
      <param name="requests">Коллекция пакетных запросов OData.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary> Получает базовый универсальный код ресурса (URI) для пакетных запросов. </summary>
      <returns>Базовый универсальный код ресурса (URI).</returns>
      <param name="request">Первоначальный запрос, содержащий все пакетные запросы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Асинхронно обрабатывает пакетный запрос OData.</summary>
      <returns>Задача, представляющая операцию для обработки пакетного запроса.</returns>
      <param name="request">Пакетный запрос OData.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.DefaultODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary> Проверяет входящий запрос, содержащий сообщения пакетных запросов. </summary>
      <param name="request">Запрос, содержащий сообщения пакетных запросов.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchContent">
      <summary>Инкапсулирует коллекцию пакетных ответов OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" />.</summary>
      <param name="responses">Пакетные ответы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},Microsoft.Data.OData.ODataMessageWriterSettings)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" />.</summary>
      <param name="responses">Пакетные ответы.</param>
      <param name="writerSettings">
        <see cref="T:Microsoft.Data.OData.ODataMessageWriterSettings" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Web.Http.OData.Batch.ODataBatchContent" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchContent.Responses">
      <summary>Получает пакетные ответы.</summary>
      <returns>Пакетные ответы.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary>Асинхронно сериализирует содержимое объекта в заданный поток.</summary>
      <returns>Экземпляр задачи, синхронно сериализующий содержимое объекта.</returns>
      <param name="stream">Поток для записи.</param>
      <param name="context">Связанный TransportContext.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchContent.TryComputeLength(System.Int64@)">
      <summary>Вычисляет длину содержимого пакета.</summary>
      <returns>Длина вычисляемого содержимого пакета.</returns>
      <param name="length">Длина содержимого пакета в байтах.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHandler">
      <summary> Defines the abstraction for handling OData batch requests. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" /> class. </summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.MessageQuotas">
      <summary> Gets the <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> used for reading/writing the batch request/response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Batch.ODataBatchHandler.ODataRouteName">
      <summary> Gets or sets the name of the OData route associated with this batch handler. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataBatchId(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the Batch ID associated with the request. </summary>
      <returns>The Batch ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataChangeSetId(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the ChangeSet ID associated with the request. </summary>
      <returns>The ChangeSet ID associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.GetODataContentIdMapping(System.Net.Http.HttpRequestMessage)">
      <summary> Retrieves the Content-ID to Location mapping associated with the request. </summary>
      <returns>The Content-ID to Location mapping associated with this request, or null if there isn't one.</returns>
      <param name="request">The request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataBatchId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary> Associates a given Batch ID with the request. </summary>
      <param name="request">The request.</param>
      <param name="batchId">The Batch ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataChangeSetId(System.Net.Http.HttpRequestMessage,System.Guid)">
      <summary> Associates a given ChangeSet ID with the request. </summary>
      <param name="request">The request.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchHttpRequestMessageExtensions.SetODataContentIdMapping(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary> Associates a given Content-ID to Location mapping with the request. </summary>
      <param name="request">The request.</param>
      <param name="contentIdMapping">The Content-ID to Location mapping.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchReaderExtensions">
      <summary> Provides extension methods for the <see cref="T:Microsoft.Data.OData.ODataBatchReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean)">
      <summary> Reads an Operation request in a ChangeSet. </summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing a ChangeSet operation</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="changeSetId">The ChangeSet ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Guid,System.Boolean,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid)">
      <summary> Reads a ChangeSet request. </summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" /> in the ChangeSet.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch Id.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean)">
      <summary> Reads an Operation request. </summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> representing the operation.</returns>
      <param name="reader">The <see cref="T:Microsoft.Data.OData.ODataBatchReader" />.</param>
      <param name="batchId">The Batch ID.</param>
      <param name="bufferContentStream">if set to true then the request content stream will be buffered.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Boolean,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchRequestItem">
      <summary>Представляет пакетный запрос OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose">
      <summary>Освобождает все ресурсы, использованные текущим экземпляром <see cref="T:System.Web.Http.OData.Batch.ODataBatchRequestItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.Dispose(System.Boolean)">
      <summary> Освобождает неуправляемые и (необязательно) управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.GetResourcesForDisposal">
      <summary>Получает освобождаемые ресурсы.</summary>
      <returns>Коллекция освобождаемых ресурсов.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendMessageAsync(System.Net.Http.HttpMessageInvoker,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Отправляет одиночный пакетный запрос OData.</summary>
      <returns>Запрос действия.</returns>
      <param name="invoker">Вызов действия.</param>
      <param name="request">Запрос.</param>
      <param name="cancellationToken">Маркер отмены.</param>
      <param name="contentIdToLocationMapping">Content-ID для сопоставления расположения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary> Отправляет запрос. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" />.</returns>
      <param name="invoker">Вызов действия.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataBatchResponseItem">
      <summary>Представляет пакетный ответ OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose">
      <summary>Освобождает все ресурсы, использованные текущим экземпляром класса <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Web.Http.OData.Batch.ODataBatchResponseItem" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.Data.OData.ODataBatchWriter,System.Net.Http.HttpResponseMessage)">
      <summary>Асинхронно записывает одиночный пакетный ответ OData.</summary>
      <returns>Синхронно записывает одиночный пакетный ответ OData.</returns>
      <param name="writer">
        <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
      <param name="response">Ответное сообщение.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataBatchResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter)">
      <summary>Асинхронно записывает ответ.</summary>
      <returns>Синхронно записывает ответ.</returns>
      <param name="writer">
        <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.ODataHttpContentExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpContent" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.ODataHttpContentExtensions.GetODataMessageReaderAsync(System.Net.Http.HttpContent,Microsoft.Data.OData.ODataMessageReaderSettings)">
      <summary> Gets the <see cref="T:Microsoft.Data.OData.ODataMessageReader" /> for the <see cref="T:System.Net.Http.HttpContent" /> stream. </summary>
      <returns>A <see cref="T:Microsoft.Data.OData.ODataMessageReader" />.</returns>
      <param name="content">The <see cref="T:System.Net.Http.HttpContent" />.</param>
      <param name="settings">The <see cref="T:Microsoft.Data.OData.ODataMessageReaderSettings" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationRequestItem">
      <summary> Представляет запрос пакетной операции OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.OperationRequestItem" />. </summary>
      <param name="request">Запрос операции.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Web.Http.OData.Batch.OperationRequestItem" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.GetResourcesForDisposal">
      <summary> Получает ресурсы, зарегистрированные для освобождения в сообщении запроса операции. </summary>
      <returns>Коллекция ресурсов, зарегистрированных для освобождения.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Batch.OperationRequestItem.Request">
      <summary> Получает запрос пакетной операции. </summary>
      <returns>Запрос пакетной операции.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationRequestItem.SendRequestAsync(System.Net.Http.HttpMessageInvoker,System.Threading.CancellationToken)">
      <summary>Асинхронно отправляет запрос операции. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" />.</returns>
      <param name="invoker">Вызов действия.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.OperationResponseItem">
      <summary>Represents an Operation response.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" /> class.</summary>
      <param name="response">The response messages for the Operation request.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.Http.OData.Batch.OperationResponseItem" /> class and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.Http.OData.Batch.OperationResponseItem.Response">
      <summary>Gets the response messages for the Operation.</summary>
      <returns>The response messages for the Operation.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Batch.OperationResponseItem.WriteResponseAsync(Microsoft.Data.OData.ODataBatchWriter)">
      <summary>Writes the response as an Operation.</summary>
      <returns>Asynchronously writes the response.</returns>
      <param name="writer">The <see cref="T:Microsoft.Data.OData.ODataBatchWriter" />.</param>
    </member>
    <member name="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler">
      <summary> Реализация <see cref="T:System.Web.Http.OData.Batch.ODataBatchHandler" />, не сохраняющая в буфер поток содержимого запроса. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler" />. </summary>
      <param name="httpServer">
        <see cref="T:System.Web.Http.HttpServer" /> для обработки отдельных пакетных запросов.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Batch.ODataBatchResponseItem},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteChangeSetAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary> Выполняет ChangeSet. </summary>
      <returns>Ответ для ChangeSet.</returns>
      <param name="batchReader">Модуль чтения пакетов.</param>
      <param name="batchId">Идентификатор пакета.</param>
      <param name="originalRequest">Первоначальный запрос, содержащий все пакетные запросы.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ExecuteOperationAsync(Microsoft.Data.OData.ODataBatchReader,System.Guid,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary> Выполняет операцию. </summary>
      <returns>Ответ для операции.</returns>
      <param name="batchReader">Модуль чтения пакетов.</param>
      <param name="batchId">Идентификатор пакета.</param>
      <param name="originalRequest">Первоначальный запрос, содержащий все пакетные запросы.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.GetBaseUri(System.Net.Http.HttpRequestMessage)">
      <summary> Получает базовый универсальный код ресурса (URI) для пакетных запросов. </summary>
      <returns>Базовый универсальный код ресурса (URI).</returns>
      <param name="request">Первоначальный запрос, содержащий все пакетные запросы.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Асинхронно обрабатывает пакетные данные.</summary>
      <returns>Задача, выполняющая обработку.</returns>
      <param name="request">Пакетный запрос.</param>
      <param name="cancellationToken">Маркер отмены.</param>
    </member>
    <member name="M:System.Web.Http.OData.Batch.UnbufferedODataBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary> Проверяет входящий запрос, содержащий сообщения пакетных запросов. </summary>
      <param name="request">Запрос, содержащий сообщения пакетных запросов.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary>ActionConfiguration представляет действие OData, которое нужно предоставить через вашу службу.ActionConfigurations предоставляются через $metadata как элемент &lt;FunctionImport /&gt;.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary> Добавляет новый параметр без привязки. </summary>
      <returns>Новый параметр без привязки.</returns>
      <param name="name">Имя.</param>
      <param name="parameterType">Тип параметра.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary>Получение bindingParameter.Значение Null значит, что действие не имеет bindingParameter.</summary>
      <returns>Параметр bindingParameter.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary> Добавляет новый параметр коллекции без привязки.</summary>
      <returns>Новый параметр коллекции без привязки.</returns>
      <param name="name">Имя.</param>
      <typeparam name="TElementType">Базовый тип элемента.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions">
      <summary>Получает значение, которое указывает, соответствуют ли соглашениям OData ссылки, предоставленные <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" />.</summary>
      <returns>Значение true, если ссылки, предоставленные <see cref="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink" />, следуют соглашениям OData; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary> Извлекает зарегистрированную фабрику ссылок действия. </summary>
      <returns>Зарегистрированная фабрика ссылок действия.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Регистрирует фабрику, которая создает ссылки действия.</summary>
      <returns>Фабрика, которая создает ссылки действия.</returns>
      <param name="actionLinkFactory">Делегат actionLinkFactory должен использовать ActionLinkBuilder при создании ссылок.</param>
      <param name="followsConventions">Значение, которое указывает, соответствуют ли соглашениям OData ссылки, создаваемые фабрикой ссылок действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary>Всегда ли можно привязать это действие.Например, представьте действие «Просмотр», которое можно привязать к фильму: не всегда можно просмотреть фильм, поэтому IsAlwaysBindable возвратит значение false.</summary>
      <returns>Значение true, если это действие всегда можно привязать, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable">
      <summary>Получает значение, можно ли привязать действие к url, представляющему BindingParameter.</summary>
      <returns>Значение true, если действие можно привязать к url, представляющему параметр BindingParameter; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind">
      <summary>Получает тип процедуры, который может быть действием, функцией или ServiceOperation.</summary>
      <returns>Тип процедуры.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary> Добавляет новый параметр без привязки.</summary>
      <returns>Новый параметр без привязки.</returns>
      <param name="name">Имя.</param>
      <typeparam name="TParameter">Параметр универсального типа.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters">
      <summary>Получает параметры, которые принимает действие.</summary>
      <returns>Параметры, принимаемые действием.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary> Заданный возвращаемый тип действия.</summary>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary> Задает возвращаемый тип действия. Используется если возвращаемый тип – это коллекция типов Primitive или ComplexType.  </summary>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary> Задает возвращаемый тип для коллекции экземпляров EntityType. </summary>
      <param name="entitySetName">Класс entitySetName, содержащий возвращаемое значение экземпляров EntityType</param>
      <typeparam name="TElementEntityType">Тип, являющийся EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary> Задает возвращаемый тип как единичный экземпляр EntityType. </summary>
      <param name="entitySetName">Класс entitySetName, содержащий возвращаемое значение экземпляра EntityType</param>
      <typeparam name="TEntityType">Тип, являющийся EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Указывает имя и тип bindingParameter. Если он имеет значение alwaysBindable, используется при условии, что действие имеет параметр isBindable. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary>ActionLinkBuilder можно использовать для добавления примечаний к действию.Так модули форматирования создают ссылки для вызова привязанных действий.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)">
      <summary>Создайте новый ActionLinkBuilder на основе actionLinkFactory.</summary>
      <param name="actionLinkFactory">Делегат actionLinkFactory должен использовать ActionLinkBuilder при создании ссылок.</param>
      <param name="followsConventions">Значение, которое указывает, соответствуют ли соглашениям OData ссылки, создаваемые фабрикой ссылок действия.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)">
      <summary>Создает ссылку действия для заданной сущности.</summary>
      <returns>Сформированная ссылка действия.</returns>
      <param name="context">Контекст экземпляра для помещения в оболочку экземпляра сущности.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary> Создает фабрику ссылок действий, создающую ссылку действия, на основе expensiveAvailabilityCheck, но только при необходимости или если нужно произвести затратные проверки. Это можно определить по свойству EntityInstanceContext.SkipExpensiveActionAvailabilityChecks. </summary>
      <returns>Новая фабрика ссылок действий.</returns>
      <param name="baseFactory">Фабрика ссылок действий, действительно создающая ссылки, если пройдены все проверки.</param>
      <param name="expensiveAvailabilityCheck">Функция проверки доступности затратна, но если ее вызвать, она возвращается при условии доступности действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions">
      <summary>Получает логическое значение, указывающее, следует ли фабрика ссылок соглашениям OData.</summary>
      <returns>Возвращает значение <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary> Представляет параметр BindingParameter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Создание BindingParameterConfiguration </summary>
      <param name="name">Имя параметра привязки</param>
      <param name="parameterType">Тип параметра привязки</param>
      <param name="alwaysBindable">Всегда ли можно связать действие с экземплярами параметра привязки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary>Указывает, всегда ли параметр BindingParameter привязываемый или нет.Например, некоторые действия доступны всегда, а некоторые – только в определенное время или при определенных обстоятельствах.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName">
      <summary>Имя параметра по умолчанию для параметра привязки действия.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration представляет свойство CollectionProperty для EntityType или ComplexType.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Создает CollectionPropertyConfiguration с помощью предоставляемого свойства <paramref name="property" />.</summary>
      <param name="property">Свойство коллекции.</param>
      <param name="declaringType">Объявляющий тип конфигурации.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Возвращает тип элементов коллекции</summary>
      <returns>Тип элементов в коллекции.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Устанавливает для CollectionProperty необязательное значение (т. е.допускающее значение NULL).</summary>
      <returns>Объект <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Устанавливает для CollectionProperty обязательное значение (т. е.не допускающее значение NULL).</summary>
      <returns>Объект <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> этой коллекции.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> этой коллекции.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <summary>Получает тип CLR коллекции.</summary>
      <returns>Тип CLR коллекции.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Представляет коллекцию некоторого именованного типа.Например, Collection(Namespace.Customer) или Collection(Namespace.Adress).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Создает коллекцию, содержащую элементы указанного ElementType и представленную в .NET с помощью указанного типа clrType.</summary>
      <param name="elementType">Класс EdmTypeConfiguration элементов в коллекции</param>
      <param name="clrType">Тип этой коллекции при манифестировании в CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <summary>Получает тип CLR, связанный с этим типом коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /> элементов в этой коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <summary>Получает полное имя (включая пространство имен) этого типа коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <summary>Получает вид EdmType.В данном случае это <see cref="F:Microsoft.Data.Edm.EdmTypeKind.Collection" />.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <summary>Возвращает связанный <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <summary>Получает имя этого типа коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <summary>Получает пространство имен этого типа коллекции.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration">
      <summary>Представляет конфигурацию для сложного свойства структурного типа (типа сущности или сложного типа).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />.</summary>
      <param name="property">Свойство конфигурации.</param>
      <param name="declaringType">Объявляющий тип свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional">
      <summary>Помечает текущее сложное свойство как необязательное.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired">
      <summary>Помечает текущее сложное свойство как обязательное.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind">
      <summary>Получает тип этого свойства.</summary>
      <returns>Тип данного свойства.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType">
      <summary>Получает тип CLR этого свойства.</summary>
      <returns>Тип CLR этого свойства.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Позволяет выполнить конфигурацию для сложного типа в модели.ComplexTypeConfiguration можно получить с помощью метода <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</summary>
      <param name="modelBuilder">Используемый <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Резервный тип CLR для данного типа сущности.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind">
      <summary>Получает или задает вид метатипов EDM для настройки сложных типов.</summary>
      <returns>Вид метатипов EDM для настройки сложных типов.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmComplexType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration представляет коллекцию объектов.Этот класс можно использовать для конфигурации элементов, связанных с сущностями, например как действия привязаны к коллекции.</summary>
      <typeparam name="TEntityType">EntityType, являющееся ElementType для EntityCollection</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Создает новое действие, привязываемое к Collection(EntityType).</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек действия.</returns>
      <param name="name">Имя действия</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Создает новое действие, не всегда привязываемое к Collection(EntityType).</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек действия.</returns>
      <param name="name">Имя действия</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Позволяет выполнить конфигурацию для набора сущностей в модели.<see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> можно получить с помощью метода <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
      <param name="modelBuilder">
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">
        <see cref="T:System.Type" /> CLR типа сущности, содержащейся в этом наборе сущностей.</param>
      <param name="name">Имя набора сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
      <param name="modelBuilder">
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="entityType">
        <see cref="T:System.Type" /> CLR типа сущности, содержащейся в этом наборе сущностей.</param>
      <param name="name">Имя набора сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Привязывает указанное свойство навигации к целевому набору сущностей.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />, чтобы его можно было настроить позже.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
      <param name="targetEntitySet">Целевой набор сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Получает цели навигации этого набора сущностей.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Получает резервный тип clr для типа сущности, содержащейся в этом наборе сущностей.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Получает тип сущности, содержащейся в этом наборе сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> для свойства навигации с заданным именем.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />.</returns>
      <param name="propertyName">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Выполняет поиск привязки для заданного свойства навигации и осуществляет попытку создать ее, если она не существует.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />, чтобы его можно было настроить позже.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Выполняет поиск привязки для указанного свойства навигации.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />, чтобы его можно было настроить позже.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
      <param name="autoCreate">Указывает, следует ли автоматически создать привязку, если она не существует.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Получает конструктор, используемый для создания ссылки правки для записей из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Получает конструктор, используемый для генерации ссылки на себя для каналов для этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Получает конструктор, используемый для создания идентификатора для записей из этого набора сущностей.</summary>
      <returns>Конструктор.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Получает конструктор, используемый для создания ссылки навигации для указанного свойства навигации из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
      <param name="navigationProperty">Свойство навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Получает конструктор, используемый для создания ссылки чтения для записей из этого набора сущностей.</summary>
      <returns>Конструктор ссылок.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl">
      <summary>Получает URL-адрес набора сущностей.</summary>
      <returns>URL-адрес набора сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Настраивает ссылку правки для сущностей из данного набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="editLinkBuilder">Конструктор, используемый для создания ссылки правки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Добавляет ссылку на себя в канал.</summary>
      <returns>Конфигурация набора сущностей, настраиваемых в настоящее время.</returns>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})">
      <summary>Настраивает идентификатор для сущностей из данного набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="idLinkBuilder">Конструктор, используемый для создания идентификатора.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Настраивает ссылку навигации для заданных свойств навигации сущностей из этого набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="navigationProperties">Свойства навигации, для которых создается ссылка навигации.</param>
      <param name="navigationLinkBuilder">Конструктор, используемый для создания ссылки навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Настраивает ссылку навигации для заданного свойства навигации сущностей из этого набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="navigationProperty">Свойство навигации, для которого создается ссылка навигации.</param>
      <param name="navigationLinkBuilder">Конструктор, используемый для создания ссылки навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Настраивает ссылку чтения для сущностей из данного набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="readLinkBuilder">Конструктор, используемый для создания ссылки чтения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Настраивает URL-адрес набора сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="url">URL-адрес набора сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Получает имя этого набора сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Удаляет привязку для указанного свойства навигации.</summary>
      <param name="navigationConfiguration">Свойство навигации</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TEntityType">Тип элемента набора сущностей.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType">
      <summary>Получает тип сущности, содержащейся в этом наборе сущностей.</summary>
      <returns>Тип сущности, содержащейся в этом наборе сущностей.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)">
      <summary>Выполняет поиск <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> для свойства навигации с заданным именем.</summary>
      <returns>Привязка. Если она не найдена — значение NULL.</returns>
      <param name="propertyName">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Выполняет поиск <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> для свойства навигации или создает его в случае отсутствия.</summary>
      <returns>Привязка. Если привязка не найдена — она создается.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)">
      <summary>Выполняет поиск <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> для заданного свойства навигации.</summary>
      <returns>Привязка, если она найдена.</returns>
      <param name="navigationConfiguration">Свойство навигации.</param>
      <param name="autoCreate">Значение true для создания привязки, если она не найдена; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Настраивает ссылку правки для сущностей из данного набора сущностей.</summary>
      <param name="editLinkFactory">Фабрика, используемая для создания ссылки правки.</param>
      <param name="followsConventions">Значение true, чтобы указать, что фабрика соответствует соглашениям OData о ссылках правки; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Настраивает ссылку правки для сущностей из данного набора сущностей.</summary>
      <param name="editLinkFactory">Фабрика, используемая для создания ссылки правки.</param>
      <param name="followsConventions">Значение true, чтобы указать, что фабрика соответствует соглашениям OData о ссылках правки; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary>  Добавляет ссылку на себя в канал.</summary>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>  Добавляет ссылку на себя в канал.</summary>
      <param name="feedSelfLinkFactory">Конструктор, используемый для генерации URL-адреса ссылки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Настраивает ссылку идентификатора для сущностей из данного набора сущностей.</summary>
      <param name="idLinkFactory">Фабрика, используемая для создания ссылки идентификатора.</param>
      <param name="followsConventions">Значение true, чтобы указать, что фабрика соответствует соглашениям OData о ссылках идентификаторов; в противном случае — значение false.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Настраивает множественную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.В случае, если он не существует, то будет создан.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает множественную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Имя целевого набора сущностей для привязки.В случае, если он не существует, то будет создан.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <summary>Настраивает множественную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.В случае, если он не существует, то будет создан.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает множественную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Имя целевого набора сущностей для привязки.В случае, если он не существует, то будет создан.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Настраивает ссылку навигации для заданных свойств навигации сущностей из этого набора сущностей.</summary>
      <param name="navigationProperties">Свойства навигации, для которых создается ссылка навигации.</param>
      <param name="navigationLinkFactory">Фабрика, используемая для создания ссылки навигации.</param>
      <param name="followsConventions">Представляет значение, указывающее, следует ли фабрика соглашениям OData о ссылках навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Настраивает ссылку навигации для заданного свойства навигации сущностей из этого набора сущностей.</summary>
      <param name="navigationProperty">Свойство навигации, для которого создается ссылка навигации.</param>
      <param name="navigationLinkFactory">Фабрика, используемая для создания ссылки навигации.</param>
      <param name="followsConventions">Представляет значение, указывающее, следует ли фабрика соглашениям OData о ссылках навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Настраивает необязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает необязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Целевой набор сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Настраивает необязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает необязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Целевой набор сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)">
      <summary>Настраивает ссылку чтения для сущностей из данного набора сущностей.</summary>
      <param name="readLinkFactory">Конструктор, используемый для создания ссылки чтения.</param>
      <param name="followsConventions">Представляет значение, указывающее, следует ли фабрика соглашениям OData о ссылках чтения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)">
      <summary>Настраивает ссылку чтения для сущностей из данного набора сущностей.</summary>
      <param name="readLinkFactory">Конструктор, используемый для создания ссылки чтения.</param>
      <param name="followsConventions">Представляет значение, указывающее, следует ли фабрика соглашениям OData о ссылках чтения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <summary>Настраивает обязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает обязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Целевой набор сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
      <typeparam name="TDerivedEntityType">Целевой тип сущности.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <summary>Настраивает обязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="entitySetName">Имя целевого набора сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <summary>Настраивает обязательную связь из этого тупа сущности и привязывает соответствующее свойство навигации к заданному набору сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationExpression">Лямбда-выражение, представляющее свойство навигации для связи. Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <param name="targetSet">Целевой набор сущностей для привязки.</param>
      <typeparam name="TTargetType">Тип целевого набора сущностей.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> is a class used to annotate an <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> inside an <see cref="T:Microsoft.Data.Edm.IEdmModel" /> with information about how to build links related to that entity set.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,Microsoft.Data.Edm.IEdmModel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> class.</summary>
      <param name="entitySet">The entity set for which the link builder is being constructed.</param>
      <param name="model">The EDM model that this entity set belongs to.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(Microsoft.Data.Edm.IEdmEntitySet,System.Func{System.Web.Http.OData.FeedContext,System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.String},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri},System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})">
      <summary>Constructs an instance of an <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.#ctor(System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Constructs an instance of an <see cref="T:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation" /> from an <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Builder.NavigationLinkBuilder)">
      <summary>Register a link builder for a <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> that navigates from Entities in this EntitySet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEditLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.String)">
      <summary>Constructs the EditLink URL for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildEntitySelfLinks(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the <see cref="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks" /> for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Build a self-link URI given a <see cref="T:System.Web.Http.OData.FeedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildIdLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs the IdLink for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildNavigationLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Constructs a NavigationLink for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" />, <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation.BuildReadLink(System.Web.Http.OData.EntityInstanceContext,System.Web.Http.OData.Formatter.ODataMetadataLevel,System.Uri)">
      <summary>Constructs a ReadLink URL for a particular <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> and <see cref="T:System.Web.Http.OData.Formatter.ODataMetadataLevel" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</summary>
      <param name="modelBuilder">Используемый <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Тип CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Помечает этот тип сущностей как абстрактный.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет свойство коллекции EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет сложное свойство EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Добавляет новое свойство навигации EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> добавленного свойства.</returns>
      <param name="navigationProperty">Резервное свойство CLR.</param>
      <param name="multiplicity">
        <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет новое простое свойство EDM в этот тип сущностей.</summary>
      <returns>Возвращает <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> добавленного свойства.</returns>
      <param name="propertyInfo">Резервное свойство CLR.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Получает или задает базовый тип этого типа сущностей.</summary>
      <returns>Базовый тип этого типа сущности.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <summary>Получает значение, которое указывает, является ли базовый тип явно настраиваемым или выводимым.</summary>
      <returns>Значение true, если базовый тип явно настроен или выведен; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Задает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="baseType">Базовый тип сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Задает для базового типа этого типа сущностей значение null. Это значит, что этот тип сущностей не является производным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Настраивает ключевые свойства для этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="keyProperty">Свойство, добавляемое к ключевым свойствам этого типа сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Получает или задает значение, указывающее, является ли этот тип абстрактным.</summary>
      <returns>Значение, указывающее, является ли тип абстрактным.Задано значение NULL.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Получает коллекцию ключей для этого типа сущностей.</summary>
      <returns>Коллекция ключей для этого типа сущности.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> этого <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</summary>
      <returns>
        <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> данного <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Получает коллекцию <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> этого типа сущностей.</summary>
      <returns>Коллекция <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> этого типа сущности.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Удаляет свойство из коллекции ключей сущности.</summary>
      <param name="keyProperty">Удаляемый ключ.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Удаляет свойство из сущности.</summary>
      <param name="propertyInfo">
        <see cref="T:System.Reflection.PropertyInfo" /> удаляемого свойства.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TEntityType">Резервный тип CLR <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Помечает этот тип сущностей как абстрактный.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Создает действие, привязываемое к этому EntityType.</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек нового действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Получает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Используется для коллекции сущностей, с помощью которых можно настроить действия, которые можно привязать к EntityCollections.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Задает базовый тип этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <typeparam name="TBaseType">Базовый тип сущностей.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Задает для базового типа этого типа сущностей значение null. Это значит, что этот тип сущностей не является производным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает ключевые свойства для этого типа сущностей.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="keyDefinitionExpression">Лямбда-выражение, представляющее свойство, используемое как первичный ключ.Например, для C# t =&amp;gt; t.Id и для Visual Basic – .Net Function(t) t.Id.</param>
      <typeparam name="TKey">Тип ключа.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Настраивает множественную связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает дополнительную связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Настраивает необходимую связь из этого типа сущностей.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки связи.</returns>
      <param name="navigationPropertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Тип сущности на другом конце связи.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Получает коллекцию <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> этого типа сущностей.</summary>
      <returns>Возвращает значение <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Создает действие, не всегда привязываемое к этому EntityType.</summary>
      <returns>ActionConfiguration для разрешения дополнительных настроек нового «переходного» действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Представляет EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>Тип CLR, связанный с EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>Полное имя (включая пространство имен) EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>Вид EdmType.Примеры содержат EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
      <returns>Возвращает значение <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>ODataModelBuilder, используемый для создания этого IEdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>Имя EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>Пространство имен EdmType.</summary>
      <returns>Возвращает значение <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.LinkGenerationHelpers">
      <summary> Contains helper methods for generating OData links that follow OData URL conventions. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateActionLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmFunctionBase)">
      <summary>Generates an action link following the OData URL conventions for the <paramref name="action" /> and bound to the entity represented by <paramref name="entityContext" />.</summary>
      <returns>The generated action link following OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the action link needs to be generated.</param>
      <param name="action">The action for which the action link needs to be generated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateFeedSelfLink(System.Web.Http.OData.FeedContext)">
      <summary>Generates a feed self link following the OData URL conventions for the feed represented by <paramref name="feedContext" />.</summary>
      <returns>The generated feed self link following the OData URL conventions.</returns>
      <param name="feedContext">The <see cref="T:System.Web.Http.OData.FeedContext" /> representing the feed for which the self link needs to be generated.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateNavigationPropertyLink(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Boolean)">
      <summary> Generates a navigation link following the OData URL conventions for the entity represented by entityContext and the given  navigation property. </summary>
      <returns>The navigation link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the navigation link needs to be generated.</param>
      <param name="navigationProperty">The EDM navigation property.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.LinkGenerationHelpers.GenerateSelfLink(System.Web.Http.OData.EntityInstanceContext,System.Boolean)">
      <summary> Generates a self link following the OData URL conventions for the entity represented by entityContext. </summary>
      <returns>The self link following the OData URL conventions.</returns>
      <param name="entityContext">The <see cref="T:System.Web.Http.OData.EntityInstanceContext" /> representing the entity for which the self link needs to be generated.</param>
      <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder">
      <summary>Инкапсулирует фабрику ссылок навигации и проверяет, соответствует ли фабрика ссылок соглашениям.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" />.</summary>
      <param name="navigationLinkFactory">Фабрика ссылок навигации для создания ссылок навигации.</param>
      <param name="followsConventions">Указывает, соответствует ли эта фабрика соглашениям OData.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory">
      <summary>Получает фабрику ссылок навигации для создания ссылок навигации.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions">
      <summary>Получает значение, указывающее, соответствует ли фабрика соглашениям OData.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Используется для настройки привязки свойства навигации для набора сущностей.Эта функциональность конфигурации предоставляется конструктором моделей Fluent API, см. <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" />.</summary>
      <param name="navigationProperty">Свойство навигации для привязки.</param>
      <param name="entitySet">Целевой набор сущностей для привязки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Получает целевой набор сущностей для привязки.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Получает свойство навигации для привязки.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration">
      <summary>Представляет конфигурацию для свойства навигации типа сущности.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" />.</summary>
      <param name="property">Резервное свойство CLR.</param>
      <param name="multiplicity">
        <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" />.</param>
      <param name="declaringType">Объявляющий тип сущности.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType">
      <summary>Получает объявляющий тип сущности.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> данного свойства.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> данного свойства навигации.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional">
      <summary>Помечает свойство навигации как необязательное.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType">
      <summary>Получает резервный тип CLR данного типа свойства.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required">
      <summary>Помечает свойство навигации как обязательное.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary>Представляет параметр процедуры без привязки.Для действий параметры без привязки предоставлены в теле запроса POST. Для функций параметры без привязки предоставлены 3 способами – ~/.../Function(p1=value) - ~/.../Function(p1=@x)?@x=value - ~/.../Function?p1=value (допустимо, если функция является сегментом пути последнего URL-адреса).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" />.</summary>
      <param name="name">Имя параметра.</param>
      <param name="parameterType">Тип EDM параметра.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>Используется для автосопоставления классов CLR с моделью EDM на основе набора <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Инициализирует новый <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Инициализирует новый <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">Используемый <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <summary>Регистрирует сложный тип как часть модели и возвращает объект, который можно использовать для конфигурации сущности.</summary>
      <returns>Объект конфигурации для указанного сложного типа.</returns>
      <param name="type">Регистрируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <summary>Регистрирует тип объекта как часть модели и возвращает объект, который можно использовать для конфигурации сущности.</summary>
      <returns>Объект конфигурации для указанного типа объекта.</returns>
      <param name="type">Регистрируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Регистрирует набор сущностей как часть модели и возвращает объект, который можно использовать для конфигурации набора сущностей.</summary>
      <returns>Объект конфигурации для указанного набора сущностей.</returns>
      <param name="name">Имя набора сущностей.</param>
      <param name="entityType">Регистрируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <summary>Создает <see cref="T:Microsoft.Data.Edm.IEdmModel" /> на основании конфигурации, выполненной с помощью этого конструктора.</summary>
      <returns>Созданная модель.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <summary>Исключает тип или типы из модели.Это используется для удаления из модели типов, добавленных соглашением во время первоначального обнаружения модели.</summary>
      <returns>Возвращает тот же <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <typeparam name="T">Тип данных.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <summary>Исключает тип или типы из модели.Это используется для удаления из модели типов, добавленных соглашением во время первоначального обнаружения модели.</summary>
      <returns>Возвращает тот же <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />, поэтому несколько вызовов можно объединить в цепочку.</returns>
      <param name="types">Типы, исключаемые из модели.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>Это действие выполняется после того, как <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> запустил все соглашения, но до блокировки конфигурации, и используется для создания <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Это действие используется для изменения конфигурации <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />, определенной по соглашению.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Представляет конструктор моделей, используемый для сопоставления классов CLR и модели EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Добавляет действие без привязки в конструктор.</summary>
      <returns>Объект конфигурации для указанного действия.</returns>
      <param name="name">Имя действия.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Регистрирует сложный тип как часть модели и возвращает объект, который можно использовать для конфигурации сущности.Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного сложного типа.</returns>
      <param name="type">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Регистрирует тип объекта как часть модели и возвращает объект, который можно использовать для конфигурации сущности.Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного типа объекта.</returns>
      <param name="type">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Регистрирует набор сущностей как часть модели и возвращает объект, который можно использовать для конфигурации набора сущностей.Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного набора сущностей.</returns>
      <param name="name">Имя набора сущностей.</param>
      <param name="entityType">Регистрируемый или конфигурируемый тип.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Добавляет процедуру в модель.</summary>
      <param name="procedure">Добавляемая процедура.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Регистрирует тип как сложный тип модели и возвращает объект, который можно использовать для конфигурации сложного типа.Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного сложного типа.</returns>
      <typeparam name="TComplexType">Регистрируемый или конфигурируемый тип.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Получает или задает имя контейнера, в котором будут храниться все наборы сущностей, действия и функции.</summary>
      <returns>Имя контейнера.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Получает или задает версию службы данных модели.Значение по умолчанию — 3.0.</summary>
      <returns>Версия службы данных модели.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Регистрирует тип объекта как часть модели и возвращает объект, который можно использовать для конфигурации сущности.Этот метод можно вызывать несколько раз для одного объекта, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного типа объекта.</returns>
      <typeparam name="TEntityType">Регистрируемый или конфигурируемый тип.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Регистрирует набор сущностей как часть модели и возвращает объект, который можно использовать для конфигурации набора сущностей.Этот метод можно вызывать несколько раз для одного и того же типа, чтобы выполнить несколько строк конфигурации.</summary>
      <returns>Объект конфигурации для указанного набора сущностей.</returns>
      <param name="name">Имя набора сущностей.</param>
      <typeparam name="TEntityType">Тип объекта набора объектов.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Получает коллекцию наборов объектов EDM в модели для создания.</summary>
      <returns>Коллекция наборов сущностей EDM в создаваемой модели.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Создает и возвращает <see cref="T:Microsoft.Data.Edm.IEdmModel" /> на основании конфигурации, выполненной с помощью этого конструктора.</summary>
      <returns>Созданная модель.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Производит попытку поиска предварительно настроенного структурного типа или простого типа, соответствующего <paramref name="type" />.Если соответствий не найдено, возвращается значение NULL.</summary>
      <returns>Предварительно настроенный структурный тип или простой тип, если он обнаружен. В противном случае — значение NULL.</returns>
      <param name="type">Искомый тип.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Получает или задает максимальную версию службы данных модели.Значение по умолчанию — 3.0.</summary>
      <returns>Максимальный номер версии службы данных модели.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Получает или настраивает пространство имен, которое будет использоваться для окончательной модели.</summary>
      <returns>Пространство имен, которое будет использоваться для окончательной модели.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Получает коллекцию процедур (т. е. действий, функций или операций службы) в создаваемой модели.</summary>
      <returns>Коллекция процедур.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Удаляет набор сущностей из модели.</summary>
      <returns>Значение true, если тип есть в модели; значение false – если его нет.</returns>
      <param name="name">Имя удаляемого набора сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>Удаляет процедуру из модели.</summary>
      <returns>Значение true, если процедура есть в модели; значение false – если ее нет.</returns>
      <param name="name">Имя удаляемой процедуры.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Удаляет процедуру из модели.</summary>
      <returns>Значение true, если процедура есть в модели; значение false – если ее нет.</returns>
      <param name="procedure">Удаляемая процедура.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Удаляет тип из модели.</summary>
      <returns>Значение true, если тип есть в модели; значение false – если его нет.</returns>
      <param name="type">Удаляемый тип.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Получает коллекцию структурных типов EDM в создаваемой модели.</summary>
      <returns>Коллекция структурных типов EDM в модели.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Представляет параметр для процедуры.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ParameterConfiguration" />.</summary>
      <param name="name">Имя параметра.</param>
      <param name="parameterType">Тип EDM параметра.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>Имя параметра.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>Тип параметра.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Используется для конфигурации простого свойства типа сущности или сложного типа.Эта функциональность конфигурации предоставляется конструктором моделей Fluent API, см. <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />.</summary>
      <param name="property">Имя свойства.</param>
      <param name="declaringType">Объявляющий тип EDM свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Настраивает свойство необязательным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Настраивает свойство обязательным.</summary>
      <returns>Возвращает себя, поэтому несколько вызовов можно объединить в цепочку.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind">
      <summary>Получает тип данного свойства.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType">
      <summary>Получает резервный тип CLR данного типа свойства.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Представляет PrimitiveType</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>Этот конструктор открыт только для модульного тестирования.Для получения PrimitiveTypeConfiguration следует использовать ODataModelBuilder.GetTypeConfigurationOrNull(Type).</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType">
      <summary>Получает резервный тип CLR данного типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Возвращает IEdmPrimitiveType, связанный с этим PrimitiveTypeConfiguration</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName">
      <summary>Получает полное имя этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder">
      <summary>Возвращает связанный <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name">
      <summary>Получает имя этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace">
      <summary>Получает пространство имен этого типа EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Представляет процедуру, предоставляемую в модели.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.ProcedureConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Получает полное имя процедуры при использовании в URL-адресах OData.Квалификация нужна, чтобы отличить процедуру от других возможных одиночных идентификаторов.</summary>
      <returns>Полное имя процедуры при использовании в URL-адресах OData.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>Получает или задает EntitySet, из которого возвращаются сущности.</summary>
      <returns>EntitySet, из которого возвращаются сущности.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>Получает значение FullName, являющееся ContainerQualifiedName.</summary>
      <returns>Значение FullName, являющееся ContainerQualifiedName.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>Получает значение FullyQualifiedName, которое является ContainerQualifiedName, проверяемым с помощью пространства имен.В основном он не обязателен, потому что большинство служб имеют максимум один контейнер с одним и тем же именем.</summary>
      <returns>Значение FullyQualifiedName, являющееся ContainerQualifiedName.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>Если процедура имеет значение IsBindable, она всегда привязывается.</summary>
      <returns>Значение true, если процедура всегда привязываемая. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>Можно ли привязать процедуру к URL-адресу, представляющему BindingParameter.</summary>
      <returns>Значение true, если процедура привязываемая. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>Можно ли из процедуры составить что-либо.Например, можно ли URL-адрес, вызывающий процедуру, использовать как базовый URL-адрес для запроса, вызывающего процедуру, а также производящий другие действия над результатами.</summary>
      <returns>Значение true, если процедура составляемая. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>Имеет ли процедура побочные эффекты.</summary>
      <returns>Значение true, если у процедуры есть побочные действия; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Получает тип процедуры, который может быть действием, функцией или ServiceOperation.</summary>
      <returns>Тип процедуры.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder">
      <summary>Получает или задает связанный <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <returns>Связанный <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Получает или задает имя процедуры.</summary>
      <returns>Имя процедуры.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Получает параметры, которые принимает процедура.</summary>
      <returns>Параметры, принимаемые процедурой.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Получает или задает тип, возвращаемый при вызове процедуры.</summary>
      <returns>Тип, возвращаемый при вызове процедуры.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>Вид процедуры OData.Действие, функция или ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary>Действие.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary>Функция.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary>Операция службы.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Базовый класс для всех конфигураций свойств.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.PropertyConfiguration" />.</summary>
      <param name="property">Имя свойства.</param>
      <param name="declaringType">Объявляющий тип EDM свойства.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <summary>Получает или задает значение: true, если свойство добавлено пользователе, и false, если оно было определено посредством соглашений.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <summary>Получает объявляющий тип.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Получает <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> свойства.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Получает имя свойства.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Получает CLR <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" /> для сопоставления.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Получает CLR <see cref="T:System.Type" /> свойства.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind">
      <summary>Вид свойства EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>Представляет свойство коллекции EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>Представляет сложное свойство EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>Представляет свойство навигации EDM.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>Представляет простое свойство EDM.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> Инкапсулирует фабрику ссылок на себя и проверяет, соответствует ли фабрика ссылок соглашениям. </summary>
      <typeparam name="T">Тип создаваемой ссылки на себя.Он предназначен для ссылок идентификатора и ссылок чтения и правки.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary> Создает новый экземпляр <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />. </summary>
      <param name="linkFactory">Фабрика ссылок.</param>
      <param name="followsConventions">Следует ли фабрика соглашениям odata для генерации ссылок.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> Получает фабрику для генерации ссылок. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> Получает логическое значение, указывающее, следует ли фабрика ссылок соглашениям OData. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Базовый класс для всех структурных конфигураций свойств.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration" />.</summary>
      <param name="property">Свойство конфигурации.</param>
      <param name="declaringType">Объявляющий тип свойства.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty">
      <summary>Получает или задает значение, которое указывает, является ли это свойство необязательным.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</summary>
      <param name="modelBuilder">Связанный <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</param>
      <param name="clrType">Резервный тип CLR для этого структурного типа EDM.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет свойство коллекции в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет сложное свойство в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Добавляет простое свойство в этот тип edm.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" />, чтобы свойство можно было настроить позже.</returns>
      <param name="propertyInfo">Добавляемое свойство.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Получает резервный CLR <see cref="T:System.Type" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties">
      <summary>Получает коллекцию явно добавленных свойств.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Получает полное имя этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Получает свойства из резервного типа CLR, которые нужно игнорировать в этом типе EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Получает имя этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Получает пространство имен этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Получает объявленные свойства этого типа EDM.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties">
      <summary>Получает коллекцию явно удаленных свойств.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Удаляет указанное свойство.</summary>
      <param name="propertyInfo">Удаляемое свойство.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <summary>Представляет <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" />, который можно создать с помощью <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" />.</summary>
      <param name="configuration">Внутренняя конфигурация структурного типа.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Добавляет свойство коллекции в этот тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TElementType">Тип элемента коллекции.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Добавляет сложное свойство в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TComplexType">Сложный тип.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Исключает свойство из типа.</summary>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="TProperty">Тип свойства.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties">
      <summary>Получает коллекцию структурных свойств EDM, принадлежащих этому типу.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary>Добавляет двоичное свойство в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})">
      <summary>Добавляет свойство потока в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary>Добавляет необязательное простое свойство в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">Тип простого свойства.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary>Добавляет свойство строки в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Добавляет обязательное простое свойство в тип EDM.</summary>
      <returns>Объект конфигурации, который может использоваться для последующей настройки свойства.</returns>
      <param name="propertyExpression">Лямбда-выражение, представляющее свойство навигации для связи.Например, в C# t =&gt; t.MyProperty и в Visual Basic .NET Function(t) t.MyProperty.</param>
      <typeparam name="T">Тип простого свойства.</typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping">
      <summary>Представляет сопоставление типа мультимедиа, которое связывает запросы необработанных значений двоичных свойств с типом содержимого application/octet-stream.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataBinaryValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary>Возвращает значение, указывающее, соответствует ли текущий объект сегменту свойства.</summary>
      <returns>Значение true, если текущий объект соответствует сегменту свойства; в противном случае — значение false.</returns>
      <param name="propertySegment">Сегмент свойств.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>Класс <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> для обработки OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />. </summary>
      <param name="payloadKinds">Тип полезных данных, поддерживаемых этим модулем форматирования.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Collections.Generic.IEnumerable{Microsoft.Data.OData.ODataPayloadKind})">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />. </summary>
      <param name="deserializerProvider">Используемый <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />.</param>
      <param name="serializerProvider">Используемый <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />.</param>
      <param name="payloadKinds">Тип полезных данных, поддерживаемых этим модулем форматирования.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.DeserializerProvider">
      <summary> Получает <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />, который будет использоваться этим экземпляром модуля форматирования. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)"></member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SerializerProvider">
      <summary> Получает <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" />, который будет использоваться этим экземпляром модуля форматирования. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>Классы <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> для обработки OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary> Создает список модулей форматирования мультимедиа для обработки OData заданным serializerProvider и deserializerProvider. </summary>
      <returns>Список модулей форматирования типа мультимедиа для обработки OData.</returns>
      <param name="serializerProvider">Используемый поставщик сериализатора.</param>
      <param name="deserializerProvider">Используемый поставщик десериализатора.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMetadataLevel">
      <summary> The amount of metadata information to serialize in an OData response (for JSON light). </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.Default">
      <summary> Normal metadata; used for anything other than JSON light (Atom/XML, JSON verbose). </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.FullMetadata">
      <summary> JSON light full metadata. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.MinimalMetadata">
      <summary> JSON light minimal metadata. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Formatter.ODataMetadataLevel.NoMetadata">
      <summary> JSON light no metadata. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Предоставляет <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> для простых типов EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Извлекает связыватель модели указанного типа.</summary>
      <returns>Связыватель модели.</returns>
      <param name="configuration">Конфигурация.</param>
      <param name="modelType">Тип модели для извлечения.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping">
      <summary> Сопоставление типа мультимедиа, которое связывает запросы необработанных значений недвоичных простых свойств и тип содержимого text/plain. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.#ctor">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataPrimitiveValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary>Определяет, является ли запрос запросом простых значений OData.</summary>
      <returns>Значение true, если запрос является запросом простых значений OData. В противном случае — значение false.</returns>
      <param name="propertySegment">Сегмент свойства пути.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping">
      <summary> Сопоставление типа мультимедиа, который связывает запросы необработанных значений свойств. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.#ctor(System.String)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.IsMatch(System.Web.Http.OData.Routing.PropertyAccessPathSegment)">
      <summary> Этот метод определяет, является ли <see cref="T:System.Net.Http.HttpRequestMessage" /> запросом необработанных значений OData. </summary>
      <returns>Значение true, если запрос является запросом необработанных значений OData.</returns>
      <param name="propertySegment">
        <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" /> пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataRawValueMediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary>Возвращает качество сопоставления MediaTypeHeaderValue, связанного с запросом.</summary>
      <returns>Качество совпадения.Значение должно находиться между 0,0 и 1,0.Значение 0,0 означает отсутствие совпадения.Значение 1,0 означает полное совпадение.</returns>
      <param name="request">Проверяемое сообщение запроса.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider">
      <summary> The default <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary>Returns an EDM type deserializer.</summary>
      <returns>An EDM type deserializer.</returns>
      <param name="edmType">The EDM type that the deserializer can handle.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider.Instance">
      <summary> Gets the default instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />. </summary>
      <returns>The default instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.DefaultODataDeserializerProvider" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> для чтения параметров действия OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer" />.</summary>
      <param name="deserializerProvider">Поставщик десериализатора, используемый для чтения внутренних объектов.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.DeserializerProvider">
      <summary>Получает поставщик десериализатора, используемый для чтения внутренних объектов.</summary>
      <returns>Поставщик десериализатора, используемый для чтения внутренних объектов.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer">
      <summary> Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, способный читать полезные данные коллекции OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadCollectionValue(Microsoft.Data.OData.ODataCollectionValue,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, способный читать полезные данные сложных типов OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadComplexValue(Microsoft.Data.OData.ODataComplexValue,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataComplexTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer">
      <summary> An <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> is used to read an ODataMessage into a CLR object. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> class. </summary>
      <param name="payloadKind">The kind of payload this deserializer handles.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
      <summary> The kind of ODataPayload this deserializer handles. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext">
      <summary> This class encapsulates the state and settings that get passed to <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> from the <see cref="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
      <summary> Gets or sets the EDM model associated with the request. </summary>
      <returns>The EDM model associated with the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
      <summary> Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request. </summary>
      <returns>The <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
      <summary> Gets or sets the HTTP Request that is being deserialized. </summary>
      <returns>The HTTP Request that is being deserialized.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
      <summary>Gets or sets the <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" /> of the top-level object the request needs to be deserialized into.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
      <summary>Gets or sets the resource type.</summary>
      <returns>The resource type.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider">
      <summary> Represents a factory that creates an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets the <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> for the given EDM type. </summary>
      <returns>An <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer" /> that can deserialize the given EDM type.</returns>
      <param name="edmType">The EDM type.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
      <summary> Base class for all <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.Data.Edm.IEdmType" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
      <summary> The <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider" /> to use for deserializing inner items. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer">
      <summary> Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> для чтения полезных данных записей OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyNavigationProperty(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperties(System.Object,System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ApplyStructuralProperty(System.Object,Microsoft.Data.OData.ODataProperty,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.CreateEntityResource(Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntry(System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadEntryOrFeed(Microsoft.Data.OData.ODataReader)">
      <summary> Выполняет чтение ODataFeed или ODataItem из модуля чтения. </summary>
      <returns>Считанный канал или запись.</returns>
      <param name="reader">Модуль чтения OData для считывания.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.#ctor(Microsoft.Data.OData.ODataEntityReferenceLink)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkBase.EntityReferenceLink">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataEntityReferenceLink" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, способный читать полезные данные ссылок на сущности OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataEntry" /> and the inner navigation links. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.#ctor(Microsoft.Data.OData.ODataEntry)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.Entry">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataEntry" />. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataEntryWithNavigationLinks.NavigationLinks">
      <summary> Gets the inner navigation links. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" /> that can read OData feeds. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.#ctor(System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadFeed(System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries,Microsoft.Data.Edm.IEdmEntityTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataFeed" /> and the <see cref="T:Microsoft.Data.OData.ODataEntry" />'s that are part of it. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.#ctor(Microsoft.Data.OData.ODataFeed)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Entries">
      <summary> Gets the nested entries of this feed. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataFeedWithEntries.Feed">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataFeed" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase">
      <summary> Base class for all classes that wrap an <see cref="T:Microsoft.Data.OData.ODataItem" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.#ctor(Microsoft.Data.OData.ODataItem)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataItemBase.Item">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataItem" />. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems">
      <summary> Encapsulates an <see cref="T:Microsoft.Data.OData.ODataNavigationLink" /> and the list of nested items. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.#ctor(Microsoft.Data.OData.ODataNavigationLink)">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems" />. </summary>
      <param name="item">The wrapped item.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NavigationLink">
      <summary> Gets the wrapped <see cref="T:Microsoft.Data.OData.ODataNavigationLink" />. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Deserialization.ODataNavigationLinkWithItems.NestedItems">
      <summary> Gets the nested items that are part of this navigation link. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer">
      <summary> Представляет <see cref="T:System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer" />, способный читать простые типы OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.Read(Microsoft.Data.OData.ODataMessageReader,System.Type,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadPrimitive(Microsoft.Data.OData.ODataProperty,System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerContext)">
      <summary>Выполняет десериализацию простого значения из заданного primitiveProperty в указанном readContext.</summary>
      <returns>Десериализованное простое значение OData.</returns>
      <param name="primitiveProperty">Простое свойство для десериализации.</param>
      <param name="readContext">Контекст десериализатора.</param>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider">
      <summary>
        <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> по умолчанию. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Получает <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> для заданного <paramref name="edmType" />. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</returns>
      <param name="edmType">
        <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider.Instance">
      <summary> Получает используемый по умолчанию экземпляр <see cref="T:System.Web.Http.OData.Formatter.Serialization.DefaultODataSerializerProvider" />. </summary>
      <returns>Используемый по умолчанию экземпляр поставщика сериализатора OData.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks">
      <summary>EntitySelfLinks contains the Id, Edit and Read links for an entity.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.#ctor"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.EditLink">
      <summary>A URL that can be used to edit a copy of the resource.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.IdLink">
      <summary>A string that uniquely identifies the resource.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.EntitySelfLinks.ReadLink">
      <summary>A URL that can be used to retrieve a copy of the resource.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer">
      <summary>ODataSerializer для сериализации коллекции сущностей, сложных типов или простых значений.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.Data.OData.ODataCollectionValue,System.Web.Http.OData.Formatter.ODataMetadataLevel)">
      <summary>Добавляет заметки к имени типа, необходимые для правильной сериализации JSON-light.</summary>
      <param name="value">Значение коллекции, для которой добавляются заметки.</param>
      <param name="metadataLevel">Уровень метаданных OData ответа.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollection(Microsoft.Data.OData.ODataCollectionWriter,System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer">
      <summary>ODataSerializer для сериализации сложных типов.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataComplexValue(System.Object,Microsoft.Data.Edm.IEdmComplexTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataComplexTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> that serializes instances of objects backed by an <see cref="T:Microsoft.Data.Edm.IEdmType" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind,System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
      <summary> Gets the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> that can be used to write inner objects. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
      <summary> Represents an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> for serializing $links response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
      <summary> Initializes a new instance of <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации ответа ссылки для свойства навигации коллекции.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer">
      <summary>Представляет ODataSerializer для сериализации экземпляров <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateEntry(System.Web.Http.OData.Formatter.Serialization.SelectExpandNode,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Создает <see cref="T:Microsoft.Data.OData.ODataEntry" />, записываемый во время записи этой сущности. </summary>
      <returns>Созданный <see cref="T:Microsoft.Data.OData.ODataEntry" />.</returns>
      <param name="selectExpandNode">
        <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />, описывающий граф ответа.</param>
      <param name="entityInstanceContext">Контекст записываемого экземпляра сущности.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateNavigationLink(Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Создает <see cref="T:Microsoft.Data.OData.ODataNavigationLink" />, записываемый во время записи этой сущности. </summary>
      <returns>Записываемая ссылка навигации.</returns>
      <param name="navigationProperty">Свойство навигации, для которого создается ссылка навигации.</param>
      <param name="entityInstanceContext">Контекст записываемого экземпляра сущности.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateODataAction(Microsoft.Data.Edm.IEdmFunctionImport,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Создает записываемый <see cref="T:Microsoft.Data.OData.ODataAction" /> для заданного действия и экземпляра сущности. </summary>
      <returns>Созданное действие или значение NULL, если действие не следует записывать.</returns>
      <param name="action">Действие OData.</param>
      <param name="entityInstanceContext">Контекст записываемого экземпляра сущности.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateSelectExpandNode(System.Web.Http.OData.EntityInstanceContext)">
      <summary> Создает <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />, описывающий набор свойств и действий для операций select и expand при записи этой сущности. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" />, описывающий набор свойств и действий для операций select и expand при записи этой сущности. </returns>
      <param name="entityInstanceContext">Содержит записываемый экземпляр сущности и контекст.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.CreateStructuralProperty(Microsoft.Data.Edm.IEdmStructuralProperty,System.Web.Http.OData.EntityInstanceContext)">
      <summary> Создает записываемый <see cref="T:Microsoft.Data.OData.ODataProperty" /> для заданной сущности и структурного свойства. </summary>
      <returns>Записываемое свойство <see cref="T:Microsoft.Data.OData.ODataProperty" />.</returns>
      <param name="structuralProperty">Записываемое структурное свойство EDM.</param>
      <param name="entityInstanceContext">Контекст записываемого экземпляра сущности.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации <see cref="T:Microsoft.Data.OData.ODataError" /> и <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataErrorSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer">
      <summary>Представляет сериализатор OData для сериализации коллекции <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.#ctor(System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.CreateODataFeed(System.Collections.IEnumerable,Microsoft.Data.Edm.IEdmCollectionTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer.WriteObjectInline(System.Object,Microsoft.Data.Edm.IEdmTypeReference,Microsoft.Data.OData.ODataWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации метаданных.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer">
      <summary> Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.Data.Edm.IEdmPrimitiveTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.Data.Edm.IEdmTypeReference,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации необработанного значения <see cref="T:Microsoft.Data.Edm.IEdmPrimitiveType" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer">
      <summary> An ODataSerializer is used to write a CLR object to an ODataMessage. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.Data.OData.ODataPayloadKind)">
      <summary> Constructs an ODataSerializer that can generate OData payload of the specified kind. </summary>
      <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
      <summary> Gets the <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind" /> that this serializer generates. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext">
      <summary>Context information used by the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> when serializing objects in OData message format.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.#ctor(System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmNavigationProperty)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.EntitySet">
      <summary>Gets or sets the entity set.</summary>
      <returns>The entity set.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.ExpandedEntity"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Items"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
      <summary>Gets or sets the metadata level of the response.</summary>
      <returns>The metadata level of the response.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Model">
      <summary>Gets or sets the EDM model associated with the request.</summary>
      <returns>The EDM model associated with the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Path">
      <summary>Gets or sets the <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</summary>
      <returns>The <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> of the request.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Request">
      <summary>Gets or sets the HTTP Request whose response is being serialized.</summary>
      <returns>The HTTP Request whose response is being serialized.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RequestContext"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
      <summary>Gets or sets the root element name which is used when writing primitive types and complex types.</summary>
      <returns>The root element name which is used when writing primitive types and complex types.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
      <summary>Gets or sets the <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</summary>
      <returns>The <see cref="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
      <summary>Get or sets whether expensive links should be calculated.</summary>
      <returns>true if the expensive links should be calculated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext.Url">
      <summary>Gets or sets the <see cref="T:System.Web.Http.Routing.UrlHelper" /> to use for generating OData links.</summary>
      <returns>The <see cref="T:System.Web.Http.Routing.UrlHelper" /> to use for generating OData links.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider">
      <summary> An ODataSerializerProvider is a factory for creating <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />s. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.Data.Edm.IEdmTypeReference)">
      <summary> Gets an <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer" /> for the given edmType. </summary>
      <returns>The <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" />.</returns>
      <param name="edmType">The <see cref="T:Microsoft.Data.Edm.IEdmTypeReference" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(Microsoft.Data.Edm.IEdmModel,System.Type,System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer">
      <summary>Представляет <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataSerializer" /> для сериализации <see cref="T:Microsoft.Data.OData.ODataWorkspace" /> с целью формирования сервисных документов.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.ODataWorkspaceSerializer.WriteObject(System.Object,System.Type,Microsoft.Data.OData.ODataMessageWriter,System.Web.Http.OData.Formatter.Serialization.ODataSerializerContext)"></member>
    <member name="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode">
      <summary> Describes the set of structural properties and navigation properties and actions to select and navigation properties to expand while  writing an <see cref="T:Microsoft.Data.OData.ODataEntry" /> in the response. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor">
      <summary> Creates a new instance of the <see cref="T:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.Data.OData.Query.SemanticAst.SelectExpandClause,Microsoft.Data.Edm.IEdmEntityType,Microsoft.Data.Edm.IEdmModel)"></member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.ExpandedNavigationProperties">
      <summary> Gets the list of EDM navigation properties to be expanded in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedActions">
      <summary> Gets the list of OData actions to be included in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedNavigationProperties">
      <summary> Gets the list of EDM navigation properties to be included as links in the response. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.Serialization.SelectExpandNode.SelectedStructuralProperties">
      <summary> Gets the list of EDM structural properties to be included in the response. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary>Арифметические операторы, позволяющие выполнение запроса с использованием $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary>Значение, соответствующее допускающему арифметическому оператору «Add» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary>Значение, соответствующее допускающему все арифметические операторы в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary>Значение, соответствующее допускающему арифметическому оператору «Divide» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary>Значение, соответствующее допускающему арифметическому оператору «Modulo» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary>Значение, соответствующее допускающему арифметическому оператору «Multiply» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary>Значение, которое соответствует отсутствующему допускающему арифметическому оператору в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary>Значение, соответствующее допускающему арифметическому оператору «Subtract» в $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary>Функции, позволяющие выполнение запроса с использованием $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary>Значение, которое соответствует допускающей функции All в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary>Значение, которое соответствует всем допускающим функциям, связанным с датой и временем, в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary>Значение, которое соответствует всем допускающим функциям в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary>Значение, которое соответствует допускающим математическим функциям в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary>Значение, которое соответствует всем допускающим строковым функциям в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary>Значение, которое соответствует допускающей функции Any в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary>Значение, которое соответствует допускающей функции Cast в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary>Значение, которое соответствует допускающей функции Ceiling в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary>Значение, которое соответствует допускающей функции Concat в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary>Значение, которое соответствует допускающей функции Day в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary>Значение, которое соответствует допускающей функции Days в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary>Значение, которое соответствует допускающей функции EndsWith в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary>Значение, которое соответствует допускающей функции Floor в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary>Значение, которое соответствует допускающей функции Hour в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary>Значение, которое соответствует допускающей функции Hours в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary>Значение, которое соответствует допускающей функции IndexOf в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary>Значение, которое соответствует допускающей функции IsOf в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary>Значение, которое соответствует допускающей функции Length в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary>Значение, которое соответствует допускающей функции Minute в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary>Значение, которое соответствует допускающей функции Minutes в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary>Значение, которое соответствует допускающей функции Month в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary>Значение, которое соответствует допускающей функции Months в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary>Значение, которое соответствует допуску отсутствия функций в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary>Значение, которое соответствует допускающей функции Round в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary>Значение, которое соответствует допускающей функции Second в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary>Значение, которое соответствует допускающей функции Seconds в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary>Значение, которое соответствует допускающей функции StartsWith в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary>Значение, которое соответствует допускающей функции Substring в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary>Значение, которое соответствует допускающей функции SubstringOf в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary>Значение, которое соответствует допускающей функции ToLower в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary>Значение, которое соответствует допускающей функции ToUpper в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary>Значение, которое соответствует допускающей функции Trim в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary>Значение, которое соответствует допускающей функции Year в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary>Значение, которое соответствует допускающей функции Years в $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary>Логические операторы, позволяющие выполнение запроса с использованием $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary>Значение, соответствующее допускающему все логические операторы $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary>Значение, соответствующее допускающему логическому оператору «And» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary>Значение, соответствующее допускающему логическому оператору «Equal» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary>Значение, соответствующее допускающему логическому оператору «GreaterThan» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary>Значение, соответствующее допускающему логическому оператору «GreaterThanOrEqual» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary>Значение, соответствующее допускающему логическому оператору «LessThan» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary>Значение, соответствующее допускающему логическому оператору «LessThanOrEqual» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary>Значение, которое соответствует отсутствующему допускающему логическому оператору в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary>Значение, соответствующее допускающему логическому оператору «Not» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary>Значение, соответствующее допускающему логическому оператору «NotEqual» в $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary>Значение, соответствующее допускающему логическому оператору «Or» в $filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary>Параметры запроса OData для выполнения запроса.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary>Значение, соответствующее для допуска всех параметров запроса.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary>Значение, соответствующее для допуска параметра запроса $expand.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary>Значение, соответствующее для допуска параметра запроса $filter.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary>Значение, соответствующее для допуска параметра запроса $format.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary>Значение, соответствующее для допуска параметра запроса $inlinecount.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary>Значение, соответствующее для допуска параметров без запроса.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary>Значение, соответствующее для допуска параметра запроса $orderby.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary>Значение, соответствующее для допуска параметра запроса $select.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary>Значение, соответствующее для допуска параметра запроса $skip.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary>Значение, соответствующее для допуска параметра запроса $skiptoken.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary>Значение, соответствующее параметрам запроса по умолчанию, которые поддерживаются <see cref="T:System.Web.Http.QueryableAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary>Значение, соответствующее для допуска параметра запроса $top.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>Этим определяются параметры запроса $filter OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> на основе необработанного значения $filter и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение запроса $filter.Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Применяет запрос filter к данному <see cref="T:System.Linq.IQueryable" />.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса filter.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, содержащий все настройки запросов для приложений.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Применяет запрос filter к данному IQueryable.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса filter.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, содержащий все настройки запросов для приложений.</param>
      <param name="assembliesResolver">Используемый <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Получает проанализированный <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> для данного параметра запроса.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Получает необработанное значение $filter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос на фильтрацию на основе данного <paramref name="validationSettings" />.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запроса Filter.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>Данное перечисление определяет, как обрабатывать распространение значения NULL в запрашиваемой поддержке.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Определите, как обрабатывать распространения значения null в зависимости от поставщика запросов при построении запросов.Это значение по умолчанию, которое используется в <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /></summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Не обрабатывать распространения значения null при построении запроса.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Обрабатывать распространения значения null при построении запроса.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary>Представляет значение параметра запроса $inlinecount и предоставляет способ извлечения нескольких сущностей, которые соответствуют запросу.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</summary>
      <param name="rawValue">Необработанное значение для параметра запроса $inlinecount.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary>Получает количество сущностей, которые соответствуют данному запросу, если ответ должен содержать встроенное количество, или, в противном случае, null.</summary>
      <returns>Количество сущностей, которые соответствуют определенному запросу, если ответ должен содержать встроенное количество, или, в противном случае, null.</returns>
      <param name="query">Запрос, для которого вычисляется количество.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary>Получает необработанное значение $inlinecount.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary>Получает значение $inlinecount в проанализированной форме.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary>Определяет перечисление для значений параметров запроса $inlinecount.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary>Соответствует значению параметра запроса $inlinecount «allpages».</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary>Соответствует значению параметра запроса $inlinecount «none».</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ITruncatedCollection">
      <summary>Represents a collection that is truncated to a given page size.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.IsTruncated">
      <summary>Gets a value indicating whether the collection is truncated.</summary>
      <returns>true if the collection is truncated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ITruncatedCollection.PageSize">
      <summary>Gets the page size the collection is truncated to.</summary>
      <returns>The page size the collection is truncated to.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>Этим определяются параметры составного запроса OData, который может использоваться для построения запроса.На данный момент поддерживаются только параметры $filter, $orderby, $top, $skip и $inlinecount.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />.</summary>
      <param name="context">Контекст запроса.</param>
      <param name="request">Сообщение запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>Примените отдельный запрос к данному <see cref="T:System.Linq.IQueryable" /> в правильном порядке.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените отдельный запрос к данному <see cref="T:System.Linq.IQueryable" /> в правильном порядке.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после запроса.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Настройки, используемые при построении запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary> Применяет запрос к заданной сущности, используя заданный <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />. </summary>
      <returns>Новая сущность после применения запроса $select и $expand.</returns>
      <param name="entity">Исходная сущность.</param>
      <param name="querySettings">
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, содержащий все настройки запросов для приложений.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Получает или задает параметр запроса filter.</summary>
      <returns>Параметр запроса filter.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Получает или задает значение, соответствующее разрешению параметра запроса inlinecount.</summary>
      <returns>Значение, соответствующее разрешению параметра запроса inlinecount.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Проверьте, является ли заданный параметр запроса параметром запроса системы OData.</summary>
      <returns>Возвращает значение true, если параметр запроса является параметром запроса системы OData.</returns>
      <param name="queryOptionName">Имя параметра запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Ограничивает результаты запроса до максимального количества результатов.</summary>
      <returns>Ограниченные результаты запроса.</returns>
      <param name="queryable">Содержимое запроса, для которого применяется ограничение.</param>
      <param name="limit">Предел для результатов запроса.</param>
      <param name="resultsLimited">Значение true, если результаты запроса были ограничены; в противном случае — значение false.</param>
      <typeparam name="T">Тип CLR сущности.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Получает или задает значение, соответствующее разрешению параметра запроса orderby.</summary>
      <returns>Значение, соответствующее разрешению параметра запроса orderby.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Получает необработанную строку для всех параметров запроса OData.</summary>
      <returns>Необработанная строка для всех параметров запроса OData.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Получает сообщение запроса, связанное с этим экземпляром.</summary>
      <returns>Сообщение запроса, связанное с этим экземпляром.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.SelectExpand">
      <summary> Возвращает <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Возвращает <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте все запросы OData, включая skip, top, orderby и filter, на основании заданного <paramref name="validationSettings" />.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов.</summary>
      <returns>Проверяющий элемент управления для запросов.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>Этим определяется параметр составного запроса OData, который может использоваться для построения запроса.На данный момент поддерживаются только параметры $filter, $orderby, $top, $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> на основе входящего запроса и некоторых метаданных из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
      <param name="request">Входящее сообщение запроса</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените отдельный запрос к данному IQueryable в правильном порядке.</summary>
      <returns>Запрос, к которому был применен запрос.</returns>
      <param name="query">IQueryable, к которому применяется запрос.</param>
      <param name="querySettings">Настройки, используемые при построении запроса.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>Этот класс описывает параметры, которые будут использоваться во время построения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> и инициализирует параметры по умолчанию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> на основе существующего.</summary>
      <param name="settings">Копируемый параметр.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Получает или задает значение, указывающее, необходимо ли параметризировать константы.Для оптимальной производительности параметризации констант необходимо использовать инфраструктуру данных Entity Framework.</summary>
      <returns>По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Получает или задает значение, которое определяет, изменит ли построение запроса стандартный запрос при необходимости для обеспечения устойчивого порядка сортировки.</summary>
      <returns>Значение true указывает на то, что стандартный запрос будет изменен при необходимости для обеспечения устойчивого порядка сортировки.Значение false указывает, что порядок сортировки можно считать устойчивым без изменения запроса.Поставщики запросов, которые обеспечивают устойчивый порядок сортировки, должны задать значение false.По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Получает или задает значение, указывающее, как должно обрабатываться распространение значения null при построении запроса.</summary>
      <returns>По умолчанию используется значение <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Получает или задает максимальное количество возвращаемых результатов запроса.</summary>
      <returns>Максимальное количество возвращаемых результатов запроса или null, если количество не ограничено.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Представляет необработанные значения запроса из входящего запроса в строковом формате.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Получает необработанное значение запроса $expand из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $expand из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Получает необработанное значение запроса $filter из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $filter из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Получает необработанное значение запроса $format из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $format из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Получает необработанное значение запроса $inlineCount из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $inlineCount из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Получает необработанное значение запроса $orderby из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $orderby из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Получает необработанное значение запроса $select из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $select из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Получает необработанное значение запроса $skip из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $skip из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Получает необработанное значение запроса $skiptoken из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $skiptoken из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Получает необработанное значение запроса $top из универсального кода ресурса (URI) входящего запроса, если он существует.</summary>
      <returns>Необработанное значение запроса $top из универсального кода ресурса (URI) входящего запроса.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary> Этот класс описывает параметры проверки для выполнения запроса. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxExpansionDepth">
      <summary> Получает или задает максимальную глубину расширения для параметра запроса $expand. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip"></member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop"></member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary>Представляет порядок с помощью выражения $it в предложении $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByItNode" />.</summary>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для данного узла.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary>Представляет единственный порядок с помощью выражения в предложении $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByNode" />.</summary>
      <param name="direction">Направление сортировки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary>Создает список экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> из связанного списка экземпляров <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</summary>
      <returns>Список новых экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</returns>
      <param name="orderByClause">Заголовок связанного списка <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary>Получает <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для текущего узла.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Представляет порядок с помощью выражения <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</summary>
      <param name="property">
        <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> для данного узла.</param>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> для данного узла.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Получает <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> для текущего узла.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>Этим определяются параметры запроса $orderby OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> на основе необработанных значений $orderby и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Необработанное значение запроса $orderby.Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Примените запрос $orderby к данному IQueryable.</summary>
      <returns>Запрос, к которому был применен запрос orderby.</returns>
      <param name="query">IQueryable, к которому применяется запрос orderby.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>  Примените запрос $orderby к данному IQueryable.</summary>
      <returns>Запрос, к которому был применен запрос orderby.</returns>
      <param name="query">IQueryable, к которому применяется запрос orderby.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Получает изменяемый список экземпляров <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> для данного параметра запроса.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Получает необработанное значение $orderby.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос orderby на основе данного <paramref name="validationSettings" />.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запроса OrderBy.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>Реализация <see cref="T:System.Web.Http.Filters.IFilterProvider" />, при которой фильтр действий применяется к любому действию с <see cref="T:System.Linq.IQueryable" />, или возвращаемый тип <see cref="T:System.Linq.IQueryable`1" />, который не привязывает параметр типа <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" />.</summary>
      <param name="queryFilter">Фильтр действий, который выполняет запрос.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Предоставляет фильтры для применения к указанному действию.</summary>
      <returns>Фильтры для применения к указанному действию.</returns>
      <param name="configuration">Конфигурация сервера.</param>
      <param name="actionDescriptor">Дескриптор действия для действия, для которого предоставляются фильтры.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Получает фильтр действий, выполняющий запрос.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SelectExpandQueryOption">
      <summary>Представляет параметры запросов select и expand в OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" />.</summary>
      <param name="select">Значение параметра запроса select.</param>
      <param name="expand">Значение параметра запроса select.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, который содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Применяет параметры запросов select и expand к заданному <see cref="T:System.Linq.IQueryable" />, используя заданное значение <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса filter.</returns>
      <param name="queryable">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="settings">
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, содержащий все настройки запросов для приложений.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Применяет параметры запросов select и expand к заданной сущности, используя заданное значение <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
      <returns>Новая сущность после применения запросов select и expand.</returns>
      <param name="entity">Исходная сущность.</param>
      <param name="settings">
        <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />, содержащий все настройки запросов для приложений.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <returns>Указанный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawExpand">
      <summary>Получает необработанное значение expand.</summary>
      <returns>Необработанное значение expand.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.RawSelect">
      <summary>Получает необработанное значение select.</summary>
      <returns>Необработанное значение select.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause">
      <summary>Получает проанализированный <see cref="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> для данного параметра запроса.</summary>
      <returns>Проанализированный <see cref="P:System.Web.Http.OData.Query.SelectExpandQueryOption.SelectExpandClause" /> для данного параметра запроса.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SelectExpandQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверка запросов select и expand на основе данного значения validationSettings.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SelectExpandQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов select и expand.</summary>
      <returns>Проверяющий элемент управления для запросов select и expand.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>Этим определяются параметры запроса $skip OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> на основе необработанных значений $skip и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение запроса $skip.Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Применяет запрос $skip к данному IQueryable.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса skip.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Настройки запроса, используемые при применении данного параметра запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Применяет запрос $skip к данному IQueryable.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса skip.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Настройки запроса, используемые при применении данного параметра запроса.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Получает необработанное значение $skip.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос skip на основе данного <paramref name="validationSettings" />.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов Skip.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Получает значение $skip как проанализированное целое число.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>Этим определяются параметры запроса $top OData для выполнения запроса.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Инициализируйте новый экземпляр <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> на основе необработанного значения $top и модели EdmModel из <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="rawValue">Необработанное значение для запроса $top.Это может быть значение null или пустое значение.</param>
      <param name="context">
        <see cref="T:System.Web.Http.OData.ODataQueryContext" />, которое содержит <see cref="T:Microsoft.Data.Edm.IEdmModel" /> и некоторую информацию о типе</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените запрос $top к данному IQueryable.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса top.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Настройки запроса, используемые при применении данного параметра запроса.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Примените запрос $top к данному IQueryable.</summary>
      <returns>Новый <see cref="T:System.Linq.IQueryable" /> после применения запроса top.</returns>
      <param name="query">Исходный <see cref="T:System.Linq.IQueryable" />.</param>
      <param name="querySettings">Настройки запроса, используемые при применении данного параметра запроса.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Получает данный <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Получает необработанное значение $top.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверьте запрос top на основе данного <paramref name="validationSettings" />.При сбое проверки он вызывает конструктор ODataException.</summary>
      <param name="validationSettings">Экземпляр <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />, который содержит все параметры проверки.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Получает или задает проверяющий элемент управления для запросов Top.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Получает значение $top как проанализированное целое число.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.TruncatedCollection`1">
      <summary>Represents a class that truncates a collection to a given page size.</summary>
      <typeparam name="T">The collection element type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The source.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.TruncatedCollection`1" /> class.</summary>
      <param name="source">The source.</param>
      <param name="pageSize">The page size.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.IsTruncated">
      <summary>Gets a value indicating whether the collection is truncated.</summary>
      <returns>true if the collection is truncated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TruncatedCollection`1.PageSize">
      <summary>Gets the page size the collection is truncated to.</summary>
      <returns>The page size the collection is truncated to.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary>Представляет методы для проверки <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> на основании <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверяет <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
      <param name="filterQueryOption">Запрос $filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы ограничить запрос «все» в запросе на фильтрацию.</summary>
      <param name="allNode">Запрос «все» в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, чтобы ограничить запрос «любые» в запросе на фильтрацию.</summary>
      <param name="anyNode">Запрос «любые» в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод для арифметических операторов, включая add, sub, mul, div, mod.</summary>
      <param name="binaryNode">Арифметические операторы.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы ограничить двоичные операторы в запросе на фильтрацию.К ним относятся все логические операторы, кроме «not» и все математические операторы.</summary>
      <param name="binaryOperatorNode">Двоичные операторы в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы проверить метод доступа к свойствам коллекции.</summary>
      <param name="propertyAccessNode">Метод доступа к свойствам коллекции.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, чтобы ограничить «константу» в запросе на фильтрацию.</summary>
      <param name="constantNode">Параметр «константа» в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, чтобы ограничить «приведение» в запросе на фильтрацию.</summary>
      <param name="convertNode">Параметр «приведение» в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, если необходимо проверить приведения для коллекций сущностей.</summary>
      <param name="entityCollectionCastNode">Приведение коллекций сущностей.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, чтобы сравнить логические_операторы, такие как «eq», «ne», «gt», «ge», «lt», «le» и «or».Обратите внимание, что к ним не относится оператор «not».Переопределите параметр ValidateUnaryOperatorNode, чтобы настроить оператор «not».</summary>
      <param name="binaryNode">Логические операторы.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод для проверки узла свойств навигации.</summary>
      <param name="sourceNode">Исходный узел.</param>
      <param name="navigationProperty">Узел свойств навигации.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, если необходимо перейти к каждому узлу в запросе.</summary>
      <param name="node">Посещаемый узел запросов.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы проверить параметр, который используется в запросе filter.</summary>
      <param name="rangeVariable">Параметр, используемый в запросе filter.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, если необходимо проверить приведения для одной сущности.</summary>
      <param name="singleEntityCastNode">Приведение одиночных сущностей.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите метод, чтобы проверить вызовы функций, такие как «length», «years» и т.д.</summary>
      <param name="node">Узел вызова функций.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы проверить метод доступа к свойству.</summary>
      <param name="propertyAccessNode">Метод доступа к свойствам.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Переопределите этот метод, чтобы проверить оператор Not.</summary>
      <param name="unaryOperatorNode">Унарный оператор.</param>
      <param name="settings">Настройки проверки.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator">
      <summary>Представляет проверяющий элемент управления, используемый для проверки запросов OData на основе <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверяет запрос OData.</summary>
      <param name="options">Проверяемый запрос OData.</param>
      <param name="validationSettings">Настройки проверки.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator">
      <summary>Представляет проверяющий элемент управления, используемый для проверки <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> на основе <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверяет <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <param name="orderByOption">Запрос $orderby.</param>
      <param name="validationSettings">Настройки проверки.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator">
      <summary> Represents a validator used to validate a <see cref="T:System.Web.Http.OData.Query.SelectExpandQueryOption" /> based on the <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator.Validate(System.Web.Http.OData.Query.SelectExpandQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Validates a <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />. </summary>
      <param name="selectExpandQueryOption">The $select and $expand query.</param>
      <param name="validationSettings">The validation settings.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator">
      <summary>Представляет проверяющий элемент управления, используемый для проверки <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> на основе <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверяет <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <param name="skipQueryOption">Запрос $skip.</param>
      <param name="validationSettings">Настройки проверки.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator">
      <summary>Представляет проверяющий элемент управления, используемый для проверки <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> на основе <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Проверяет <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <param name="topQueryOption">Запрос $top.</param>
      <param name="validationSettings">Настройки проверки.</param>
    </member>
    <member name="T:System.Web.Http.OData.Results.CreatedODataResult`1">
      <summary>Represents an action result that is a response to a POST operation with an entity to an entity set.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
      <param name="locationHeader">The location header for the created entity.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.CreatedODataResult`1" /> class.</summary>
      <param name="entity">The created entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Entity">
      <summary>Gets the entity that was created.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.CreatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the created entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.LocationHeader">
      <summary>Gets the location header of the created entity.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.CreatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Results.UpdatedODataResult`1">
      <summary>Represents an action result that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.</summary>
      <typeparam name="T">The entity type.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="contentNegotiator">The content negotiator to handle content negotiation.</param>
      <param name="request">The request message which led to this result.</param>
      <param name="formatters">The formatters to use to negotiate and format the content.</param>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Results.UpdatedODataResult`1" /> class.</summary>
      <param name="entity">The updated entity.</param>
      <param name="controller">The controller from which to obtain the dependencies needed for execution.</param>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.ContentNegotiator">
      <summary>Gets the content negotiator to handle content negotiation.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Entity">
      <summary>Gets the entity that was updated.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Results.UpdatedODataResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Formatters">
      <summary>Gets the formatters to use to negotiate and format the content.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Results.UpdatedODataResult`1.Request">
      <summary>Gets the request message which led to this result.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая вызов действия.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="action">Вызываемое действие.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="actionName">Имя действия.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Получает вызываемое действие.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Получает имя действия.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Представляет реализацию <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющую сегмент batch.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.BatchPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Тип текущего сегмента.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая приведение.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castType">Тип приведения.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castTypeName">Имя типа приведения.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Получает тип приведения.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>Получает имя типа приведения.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary>Выполняет синтаксический анализ пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> и преобразует <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Преобразует экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData.</summary>
      <returns>Сгенерированная ссылка OData.</returns>
      <param name="path">Путь OData, который необходимо преобразовать в ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Выполняет синтаксический анализ указанного пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, который содержит дополнительные сведения о типе EDM и наборе сущностей для пути.</summary>
      <returns>Представление проанализированного пути или null, если путь не совпадает с моделью.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="odataPath">Путь OData, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData, который следует за коллекцией.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData, который следует за сегментом сложного типа.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData, который следует за сущностью.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData, который следует за коллекцией сущностей.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData, который следует за простым свойством.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Выполняет синтаксический анализ первого сегмента OData, который следует за базовым идентификатором URI службы.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary>Выполняет синтаксический анализ следующего сегмента пути OData.</summary>
      <returns>Представление выполненного синтаксического анализа сегмента.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="previous">Предыдущий сегмент пути.</param>
      <param name="previousEdmType">Тип EDM пути OData вплоть до предыдущего сегмента.</param>
      <param name="segment">Значение сегмента, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary>Выполняет синтаксический анализ пути OData в сегментах.</summary>
      <returns>Сегменты пути OData.</returns>
      <param name="odataPath">Путь OData.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая набор сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySet">Получен доступ к набору сущностей.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySetName">Имя набора сущностей.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <summary>Получает набор сущностей, представленный этим сегментом.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Получает имя набора сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary>Предоставляет возможность синтаксического анализа пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> и преобразует <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Преобразует экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> в ссылку OData.</summary>
      <returns>Сгенерированная ссылка OData.</returns>
      <param name="path">Путь OData, который необходимо преобразовать в ссылку.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary>Выполняет синтаксический анализ указанного пути OData как <see cref="T:System.Web.Http.OData.Routing.ODataPath" />, который содержит дополнительные сведения о типе EDM и наборе сущностей для пути.</summary>
      <returns>Представление универсального кода ресурса (URI) после анализа или null, если идентификатор универсальный код ресурса (URI) не совпадает с моделью.</returns>
      <param name="model">Модель, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="odataPath">Путь OData, синтаксический анализ которого необходимо провести.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая индексацию в коллекции сущностей с помощью ключа.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" />.</summary>
      <param name="value">Значение ключа, которое необходимо использовать для индексации в коллекции.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Получает значение ключа, которое необходимо использовать для индексации в коллекции.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Представляет реализацию <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющую сегмент links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.LinksPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Тип текущего сегмента.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Предоставляет реализацию <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющую сегмент $metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.MetadataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Тип текущего сегмента.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая навигацию.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationProperty">Свойство навигации, доступ к которому осуществляется с помощью этого сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationPropertyName">Имя свойства навигации.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Получает свойство навигации, доступ к которому осуществляется с помощью этого сегмента.</summary>
      <returns>Свойство навигации, доступ к которому осуществляется с помощью этого сегмента.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Получает имя свойства навигации.</summary>
      <returns>Имя свойства навигации.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Тип текущего сегмента.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary>Реализация <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />, который использует соглашения маршрутизации OData сервера, чтобы выбрать действие для запросов OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" />.</summary>
      <param name="innerSelector">Селектор внутреннего контроллера, который необходимо вызвать.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Возвращает карту с ключами по строке действия для всех <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, которые может выбирать селектор.Этот метод в основном вызывается в <see cref="T:System.Web.Http.Description.IApiExplorer" /> для обнаружения всех возможных действий в контроллере.</summary>
      <returns>Карта всех <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />, которые может выбрать селектор, или значение null, если селектор не имеет четко определенного отображения <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">Дескриптор контроллера.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Выбирает действие для <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Выбранное действие.</returns>
      <param name="controllerContext">Контекст контроллера.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Предоставляет представление объекта для пути OData вместе с дополнительными сведениями о типе EDM и набором сущностей для пути.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Типы сегментов для пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>  Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Типы сегментов для пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Получает или устанавливает тип EDM для пути.</summary>
      <returns>Тип EDM пути.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Получает или устанавливает набор сущностей для пути.</summary>
      <returns>Набор сущностей для пути.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Получает шаблон пути, описывающий типы сегментов в пути.</summary>
      <returns>Шаблон пути, описывающий типы сегментов в пути.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Получает типы сегментов для пути OData.</summary>
      <returns>Коллекция сегментов пути для пути OData.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary>Реализация <see cref="T:System.Web.Http.ParameterBindingAttribute" />, используемая, чтобы привязать экземпляр <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> как параметр действия.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Получает привязку параметра.</summary>
      <returns>Привязка параметра.</returns>
      <param name="parameter">Описание параметра.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary>Реализация <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />, которая совпадает только с путями OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" />.</summary>
      <param name="pathHandler">Обработчик пути OData, который необходимо использовать для синтаксического разбора пути.</param>
      <param name="model">Модель EDM, которую необходимо использовать для синтаксического разбора пути.</param>
      <param name="routeName">Имя маршрута, с которым связано это ограничение.</param>
      <param name="routingConventions">Соглашения маршрутизации OData, которые необходимо использовать для выбора имени контроллера.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary>Получает модель EDM, которую необходимо использовать для синтаксического разбора пути.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Определяет, равен ли данный экземпляр указанному маршруту.</summary>
      <returns>Значение true, если этот экземпляр равен указанному маршруту; в противном случае — значение false.</returns>
      <param name="request">Запрос.</param>
      <param name="route">Маршрут для сравнения.</param>
      <param name="parameterName">Имя параметра.</param>
      <param name="values">Список значений параметров.</param>
      <param name="routeDirection">Направление маршрута.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary>Получает обработчик пути OData, который необходимо использовать для синтаксического разбора.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary>Получает имя пути, с которым связано это ограничение.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary>Получает соглашения маршрутизации OData, которые необходимо использовать для выбора имени контроллера.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Выбирает имя контроллера, чтобы направить к нему запрос.</summary>
      <returns>Имя контроллера, для отправки к которому выполняется подготовка, или null, если его не удается сопоставить.</returns>
      <param name="path">Путь OData запроса.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Предоставляет представление объекта для сегмента пути OData вместе с дополнительными сведениями о типе EDM и набором сущностей для пути.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRoute">
      <summary>A route implementation for OData routes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.#ctor(System.String,System.Web.Http.OData.Routing.ODataPathRouteConstraint,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Routing.ODataRoute" /> class.</summary>
      <param name="routePrefix">The route prefix.</param>
      <param name="pathConstraint">The OData path constraint.</param>
      <param name="defaults">The default values for the route.</param>
      <param name="constraints">The route constraints.</param>
      <param name="dataTokens">The data tokens.</param>
      <param name="handler">The message handler for the route.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Compute a URI based on the route and the values provided.</summary>
      <returns>The retrieved <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" />.</returns>
      <param name="request">The request message.</param>
      <param name="values">The values.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataRoute.RoutePrefix">
      <summary>Gets the route prefix.</summary>
      <returns>The route prefix.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants">
      <summary> Этот класс содержит константы маршрута для OData. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Batch">
      <summary> Суффикс шаблона маршрута для пакета OData. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Предоставляет значения видов сегментов для реализаций <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action">
      <summary>Представляет сегмент, указывающий действие OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch">
      <summary>Представляет сегмент $batch OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast">
      <summary>Представляет сегмент, указывающий тип приведения.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet">
      <summary>Представляет сегмент, указывающий набор сущностей.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key">
      <summary>Представляет сегмент, указывающий операцию индексации с использованием ключа.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links">
      <summary>Представляет сегмент $$links OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata">
      <summary>Представляет сегмент $metadata OData.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation">
      <summary>Представляет сегмент, определяющий навигацию.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property">
      <summary>Представляет сегмент, определяющий доступ к свойству.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase">
      <summary>Представляет сегмент корня службы (для сервисного документа OData).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved">
      <summary>Представляет нераспознанный сегмент.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value">
      <summary>Представляет сегмент $value OData.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая доступ к свойству.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="property">Свойство, доступ к которому осуществляется с помощью этого сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="propertyName">Имя свойства.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Получает свойство свойства, доступ к которому осуществляется с помощью этого сегмента.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Получает имя свойства.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющая сегмент, который невозможно сопоставить.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" />.</summary>
      <param name="segmentValue">Значение несопоставленного сегмента.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Получает значение несопоставленного сегмента.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Представляет реализацию <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />, представляющую сегмент значения.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.ValuePathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Получает тип EDM для этого сегмента.</summary>
      <returns>Тип EDM для этого сегмента.</returns>
      <param name="previousEdmType">Тип EDM предыдущего сегмента пути.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Получает набор сущностей для этого сегмента.</summary>
      <returns>Набор сущностей для этого сегмента.</returns>
      <param name="previousEntitySet">Набор сущностей предыдущего сегмента пути.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Получает вид сегмента для текущего сегмента.</summary>
      <returns>Тип текущего сегмента.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, который представляет этот экземпляр.</summary>
      <returns>Объект <see cref="T:System.String" />, который представляет этот экземпляр.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает вызовы действий.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает операции сущностей, выполняемые с помощью ключей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает наборы сущностей.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Выбирает контроллер для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного контроллера</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary>Предоставляет абстракцию для выбора контроллера и действия для запросов OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Выбирает контроллер для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного контроллера</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает операции со ссылками.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие.</summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает запросы метаданных OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного действия</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary>Выбирает контроллер для запросов OData.</summary>
      <returns>Значение null, если запрос не обрабатывается этим соглашением, или же это имя выбранного контроллера</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="request">Запрос.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает свойства навигации.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие.</summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary>Предоставляет вспомогательные методы для создания соглашений о маршрутизации.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary>Создает изменяемый список соглашений о маршрутизации протокола OData по умолчанию.</summary>
      <returns>Изменяемый список соглашений о маршрутизации протокола OData по умолчанию.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention">
      <summary>Предоставляет реализацию <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая обрабатывает чтение структурных свойств. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.PropertyRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие для запросов OData.</summary>
      <returns>Значение NULL, если запрос не обрабатывается этим соглашением. В противном случае — имя выбранного действия.</returns>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary>Реализация <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" />, которая всегда выбирает действие с названием HandleUnmappedRequest при наличии действия.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary>Выбирает действие.</summary>
      <param name="odataPath">Путь OData.</param>
      <param name="controllerContext">Контекст контроллера.</param>
      <param name="actionMap">Сопоставление действий.</param>
    </member>
  </members>
</doc>